# Default values for ys1000.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

tags:
  mysql: true
  clusterpedia: true
  dex: false

createOrUpdateMigConfig: true
applyCRDsBeforeUpgrade: true

featureGates:
  AmberApp: true
  Stub: true
  Archive: false
  DisasterRecovery: false
  ImageBackup: true
  EtcdStub: false
  CSIAddon: false
  VolSync: false
  Tenant: false
  HostPathBackup: false

imageBase:
  registry: jibutech-registry.cn-hangzhou.cr.aliyuncs.com
  pullPolicy: Always
  tag: "3.6.2"

image:
  registry: ""
  repository: ys1000/qiming-operator
  tag: ""

components:
  portal:
    image:
      registry: ""
      repository: ys1000/mig-ui
      tag: ""
    serviceType: NodePort
#    template:
#      spec:
#        containers:
#        - name: ui
#          resources:
#            limits:
#              cpu: "1"
#              memory: 1Gi
#            requests:
#              cpu: 100m
#              memory: 128Mi
  controller:
    image:
      registry: ""
      repository: ys1000/mig-controller
      tag: ""
#    template:
#      spec:
#        containers:
#        - name: mig-controller
#          resources:
#            limits:
#              cpu: "1"
#              memory: 2Gi
#            requests:
#              cpu: 100m
#              memory: 128Mi
  cron:
    image:
      registry: ""
      repository: ys1000/cron
      tag: ""
#    template:
#      spec:
#        containers:
#        - name: cron
#          resources:
#            limits:
#              cpu: "1"
#              memory: 1Gi
#            requests:
#              cpu: 100m
#              memory: 128Mi
  webServer:
    image:
      registry: ""
      repository: ys1000/webserver
      tag: ""
    serviceType: ClusterIP
#    template:
#      spec:
#        containers:
#        - name: webserver
#          resources:
#            limits:
#              cpu: "1"
#              memory: 2Gi
#            requests:
#              cpu: 100m
#              memory: 128Mi
#    database:
#      username:
#        value: root
#      password:
#        valueFrom:
#          secretKeyRef:
#            key: mysql-root-password
#            name: mysql
#            optional: true
#      host: mysql

  operator:
    image:
      registry: ""
      repository: ys1000/agent-operator
      tag: ""
#    template:
#      spec:
#        tolerations: []
#        affinity:
#          nodeAffinity:
#        containers:
#        - name: agent-operator
#          resources:
#            limits:
#              cpu: 300m
#              memory: 128Mi
#            requests:
#              cpu: 50m
#              memory: 80Mi
  velero:
    image:
      registry: ""
      repository: ys1000/velero
      tag: v1.7.0-jibu-dev-4ae6dabe-20231218024139
    imageResticHelper:
      registry: ""
      repository: ys1000/velero-restic-restore-helper
      tag: v1.7.0
    imageInternalPlugin:
      registry: ""
      repository: ys1000/velero-plugin
      tag: ""
    plugins:
    - ys1000/velero-plugin-for-aws:v1.3.0-jibu-f64cbb6-20240124093130
    - ys1000/velero-plugin-for-csi:v0.2.1-jibu-89b6bd8-20231218024225
    resticPodMemRequest: 1Gi
    resticPodMemLimit: 8Gi
    resticPodCPURequest: 500m
    resticPodCPULimit: 1000m
    useRestic: true
    snapshotDisabled: false
#    template:
#      spec:
#        containers:
#        - name: velero
#          resources:
#            limits:
#              cpu: "1"
#              memory: 512Mi
#            requests:
#              cpu: 500m
#              memory: 128Mi
  dataVerify:
    image:
      registry: ""
      repository: ys1000/data-verify
      tag: ""
  amberApp:
    image:
      registry: ""
      repository: ys1000/amberapp
      tag: ""
#      template:
#        spec:
#          containers:
#          - name: manager
#            resources:
#              limits:
#                cpu: 100m
#                memory: 300Mi
#              requests:
#                cpu: 100m
#                memory: 50Mi
  dmAgent:
    image:
      registry: ""
      repository: ys1000/dm-agent
      tag: ""
#    template:
#      spec:
#        containers:
#        - name: manager
#          resources:
#            limits:
#              cpu: "1"
#              memory: 512Mi
#            requests:
#              cpu: 500m
#              memory: 256Mi
  resticDM:
    image:
      registry: ""
      repository: ys1000/restic-dm
      tag: ""
  stub:
    image:
      registry: ""
      repository: ys1000/stub
      tag: ""
#    template:
#      spec:
#        containers:
#        - name: stub
#          resources:
#            limits:
#              cpu: 100m
#              memory: 128Mi
#            requests:
#              cpu: 50m
#              memory: 50Mi
  etcdStub:
    image:
      registry: ""
      repository: ys1000/etcd-stub
      tag: ""
  hookRunner:
    image:
      registry: ""
      repository: ys1000/hookrunner
      tag: ""
#    template:
#      spec:
#        containers:
#        - name: hook
#          resources:
#            requests:
#              cpu: 10m
#              memory: 20Mi
#            limits:
#              cpu: "1"
#              memory: 2Gi
  volSync:
    image:
      registry: ""
      repository: ys1000/volsync
      tag: 0.6.1
  drInitContainer:
    image:
      registry: ""
      repository: ys1000/dr-initcontainer
      tag: 0.2.0
      pullPolicy: IfNotPresent
  imagePuller:
    image:
      registry: ""
      repository: ys1000/imagepuller
      tag: 0.1.0
      pullPolicy: IfNotPresent
  appHookWorker:
    image:
      registry: ""
      repository: ys1000/apphook-worker
      tag: ""

tools:
  helmHook:
    image:
      registry: ""
      repository: ys1000/helm-hook
      tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

migconfig:
  clientName: "default"
  deploymentMode: "standalone"
  isAdminCluster: false
  agentNamespace: qiming-backend
  selfBackupIntervalSeconds: 300
#  template:
#    spec:
#      tolerations: []
#      affinity:
#        nodeAffinity:
  deletionPolicy:
    removeResources: false
#    staleClusters: []
    cancelRunningJobs: false
    force: false
  auth:
    connectors: []
#    connectors:
#    - type: cas
#      id: cas
#      name: CAS
#      config:
#        server: http://0.0.0.0:31888/cas/
#        redirectURI: http://0.0.0.0:30180/cas
#        insecureSkipVerify: true

velero:
  resticPodVolumeOperationTimeout: 240m

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # hostname is default host for the ingress resource
  hostname: ys1000.local
  # path is sub-url for ys1000, default is "/"
  path: /
  pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: "1"
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

mysql:
  fullnameOverride: mysql
  tolerations: []
  image:
    registry: jibutech-registry.cn-hangzhou.cr.aliyuncs.com
    repository: ys1000/mysql
    tag: 8.0.32
    pullPolicy: IfNotPresent
  auth:
    rootPassword: "passw0rd"
    database: webserver
  primary:
    args:
    - --binlog-expire-logs-seconds=3600
    resources:
      limits:
        cpu: 1000m
        memory: 2048Mi
      requests:
        cpu: 100m
        memory: 128Mi
    persistence:
      enabled: false
      size: 30Gi
      storageClass: ""
      nfsEnabled: false
      nfs:
        server: ""
        path: ""

clusterpedia:
  persistenceMatchNode: None
  storageInstallMode: "external"
  fullnameOverride: ys

  #global:
  #  imageRegistry: ""

  apiserver:
    tolerations: []
    image:
      registry: jibutech-registry.cn-hangzhou.cr.aliyuncs.com
      repository: ys1000/apiserver
      tag: v0.7.1
    resources:
      requests:
        cpu: 200m
        memory: 128Mi
      limits:
        cpu: "2"
        memory: 1Gi

  clustersynchroManager:
    tolerations: []
    image:
      registry: jibutech-registry.cn-hangzhou.cr.aliyuncs.com
      repository: ys1000/clustersynchro-manager
      tag: v0.7.1
    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: "1"
        memory: 2Gi
    featureGates:

      ## @param AllowSyncAllCustomResources is a feature gate for the ClusterSynchro to allow syncing of all custom resources
      ## owner: @iceber
      ## alpha: v0.3.0
      AllowSyncAllCustomResources: true

      ## @param AllowSyncAllResources is a feature gate for the ClusterSynchro to allow syncing of all resources
      ## owner: @iceber
      ## alpha: v0.3.0
      AllowSyncAllResources: true

      IgnoreSyncLease: true

  ## controller manager config
  controllerManager:
    tolerations: []
    # disable controller manager
    replicaCount: 0
    image:
      registry: jibutech-registry.cn-hangzhou.cr.aliyuncs.com
      repository: ys1000/controller-manager
      tag: v0.7.1
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 200m
        memory: 256Mi

  hookJob:
    image:
      registry: jibutech-registry.cn-hangzhou.cr.aliyuncs.com
      repository: ys1000/cloudshell
      tag: v0.4.0
      pullPolicy: IfNotPresent

  postgresql:
    enabled: false

  externalStorage:
    type: "mysql"
    host: "mysql"
    port: 3306
    user: "root"
    password: "passw0rd"
    database: "clusterpedia"
    createDatabase: true

  mysql:
    enabled: false
    image:
      registry: jibutech-registry.cn-hangzhou.cr.aliyuncs.com
      repository: ys1000/mysql
      tag: 8.0.32

dex:
  fullnameOverride: ys1000-dex
  tolerations: []
  image:
    repository: jibutech-registry.cn-hangzhou.cr.aliyuncs.com/ys1000/dex
    tag: 1.0.0
    pullPolicy: Always
  config:
    issuer: http://0.0.0.0:30180/dex
    oauth2:
      skipApprovalScreen: true
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      http: 0.0.0.0:5556
    staticClients:
    - id: ys1000
      redirectURIs:
      - 'http://0.0.0.0:30180/login'
      - 'http://127.0.0.1:5555/callback'
      name: 'YS1000'
      secret: ZXmhbABsRS1tcHItcnVjlmVa12u
    enablePasswordDB: true
    staticPasswords:
    - email: "admin@example.com"
      # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
      hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
    connectors:
#    - type: mockCallback
#      id: mock
#      name: Example
#    - type: cas
#      id: cas
#      name: CAS
#      config:
#        server: http://0.0.0.0:31888/cas/
#        redirectURI: http://0.0.0.0:32000/dex/callback
#        insecureSkipVerify: true

alarm:
  enabled: false
  serviceMonitor:
    enabled: true
    labels:
      release: prometheus
  prometheusRule:
    enabled: true
    labels:
      prometheus: k8s
      role: alert-rules
  alertmanagerConfig:
    enabled: true
    labels:
      release: prometheus
  wechat:
    enabled: false
    corpID: ""
    agentID: ""
    toUser: ""
    apiSecret: ""
  webhook:
    enabled: false
