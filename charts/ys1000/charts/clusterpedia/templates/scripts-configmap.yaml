apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "clusterpedia.scripts.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
data:
  parse-yaml.sh: |
    function parse_yaml() {
      local prefix=$2
      local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
      sed -ne "s|^\($s\):|\1|" \
            -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
            -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
      awk -F$fs '{
          indent = length($1)/2;
          vname[indent] = $2;
          for (i in vname) {if (i > indent) {delete vname[i]}}
          if (length($3) > 0) {
            vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
            printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
          }
      }'
    }

    function parse_mysql_dsn() {
        local dsn=$1
        if [ -z $dsn ]
        then
            return
        fi

        IFS='?' read -r -a _dsn <<< $dsn; upnad=${_dsn[0]}
        IFS='/' read -a upnad <<< $upnad; upna=${upnad[0]}; database=${upnad[1]}
        IFS='(' read -a upna <<< $upna ; upn=${upna[0]}; address=${upna[1]%?}
        IFS='@' read -r -a upn <<< $upn; up=${upn[0]}; protocal=${upn[1]}
        IFS=':' read -r -a up <<< $up; user=${up[0]}; password=${up[1]}

        if [ ! -z $address ]
        then
            IFS=':' read -r -a address <<< $address; host=${address[0]}; port=${address[1]}
        fi

        echo "database=\"$database\""
        echo "host=\"$host\""
        echo "port=\"$port\""
        echo "user=\"$user\""
        echo "password=\"$password\""
    }
    
    function parse_postgres_dsn() {
        local dsn=$1
        if [ -z $dsn ]
        then
            return
        fi

        kvpairs=($dsn)
        for kv in "${kvpairs[@]}"; do
            if [[ $kv == "host"* ]]; then
            IFS='=' read -r -a _kv <<< $kv; host=${_kv[1]}
            fi
            if [[ $kv == "user"* ]]; then
            IFS='=' read -r -a _kv <<< $kv; user=${_kv[1]}
            fi
            if [[ $kv == "port"* ]]; then
            IFS='=' read -r -a _kv <<< $kv; port=${_kv[1]}
            fi
            if [[ $kv == "dbname"* ]]; then
            IFS='=' read -r -a _kv <<< $kv; database=${_kv[1]}
            fi
        done
    
        echo "database=\"$database\""
        echo "host=\"$host\""
        echo "port=\"$port\""
        echo "user=\"$user\""
    }

    function create_variables() {
        local yaml_file="$1"
        eval "$(parse_yaml "$yaml_file")"

        if [ $type == "mysql" ]
        then
            eval $(parse_mysql_dsn "$dsn")
        fi
    
        if [ $type == "postgres" ]
        then
            eval $(parse_postgres_dsn "$dsn")
        fi
    }
