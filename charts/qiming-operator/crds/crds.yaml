apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: backupjobs.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: BackupJob
    listKind: BackupJobList
    plural: backupjobs
    singular: backupjob
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupJob is the Schema for the backupjobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupJobSpec defines the desired state of BackupJob
            properties:
              backupContext:
                properties:
                  copyMethod:
                    type: string
                  namespaces:
                    description: Deprecated
                    items:
                      type: string
                    type: array
                  persistentVolumes:
                    items:
                      description: Name - The PV name. Capacity - The PV storage capacity.
                        StorageClass - The PV storage class name. Supported - Lists
                        of what is supported. Selection - Choices made from supported.
                        PVC - Associated PVC. NFS - NFS properties. staged - A PV
                        has been explicitly added/updated.
                      properties:
                        capacity:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        name:
                          type: string
                        pvc:
                          description: PVC
                          properties:
                            accessModes:
                              items:
                                type: string
                              type: array
                            hasReference:
                              type: boolean
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                        selection:
                          description: Selection Action - The PV migration action
                            (move|copy|skip) StorageClass - The PV storage class name
                            to use in the destination cluster. AccessMode   - The
                            PV access mode to use in the destination cluster, if different
                            from src PVC AccessMode CopyMethod   - The PV copy method
                            to use ('filesystem' for restic copy, or 'snapshot' for
                            velero snapshot plugin) Verify       - Whether or not
                            to verify copied volume data if CopyMethod is 'filesystem'
                          properties:
                            accessMode:
                              type: string
                            action:
                              type: string
                            copyMethod:
                              type: string
                            storageClass:
                              type: string
                            verify:
                              type: boolean
                          type: object
                        storageClass:
                          type: string
                        supported:
                          description: Supported Actions     - The list of supported
                            actions CopyMethods - The list of supported copy methods
                          properties:
                            actions:
                              items:
                                type: string
                              type: array
                            copyMethods:
                              items:
                                type: string
                              type: array
                          required:
                          - actions
                          - copyMethods
                          type: object
                      required:
                      - selection
                      - supported
                      type: object
                    type: array
                  policy:
                    properties:
                      copyMethod:
                        type: string
                      export:
                        properties:
                          executeSchedule:
                            type: string
                          exportSchedule:
                            type: string
                          frequency:
                            type: integer
                          times:
                            items:
                              type: string
                            type: array
                          type:
                            type: string
                        type: object
                      frequency:
                        type: string
                      resourceType:
                        enum:
                        - default
                        - dataOnly
                        - resourceOnly
                        type: string
                      retention:
                        type: integer
                      snapshotLimit:
                        type: integer
                    type: object
                  resourceFilterRules:
                    properties:
                      namespaces:
                        items:
                          type: string
                        type: array
                      templates:
                        items:
                          items:
                            properties:
                              excludeClusterResources:
                                items:
                                  properties:
                                    group:
                                      type: string
                                    names:
                                      items:
                                        type: string
                                      type: array
                                    resource:
                                      type: string
                                    version:
                                      type: string
                                  type: object
                                type: array
                              excludeResources:
                                items:
                                  properties:
                                    group:
                                      type: string
                                    names:
                                      items:
                                        type: string
                                      type: array
                                    resource:
                                      type: string
                                    version:
                                      type: string
                                  type: object
                                type: array
                              includeClusterResources:
                                items:
                                  properties:
                                    group:
                                      type: string
                                    names:
                                      items:
                                        type: string
                                      type: array
                                    resource:
                                      type: string
                                    version:
                                      type: string
                                  type: object
                                type: array
                              includeResources:
                                items:
                                  properties:
                                    group:
                                      type: string
                                    names:
                                      items:
                                        type: string
                                      type: array
                                    resource:
                                      type: string
                                    version:
                                      type: string
                                  type: object
                                type: array
                              namespaces:
                                items:
                                  type: string
                                type: array
                              selector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              templateName:
                                type: string
                            type: object
                          type: array
                        type: array
                    type: object
                  resourceType:
                    enum:
                    - default
                    - dataOnly
                    - resourceOnly
                    type: string
                  sourceClusterName:
                    type: string
                  storageName:
                    type: string
                type: object
              backupRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              canceled:
                type: boolean
              exportData:
                type: boolean
              inactivated:
                type: boolean
              keepAnnotations:
                type: boolean
              quiescePods:
                type: boolean
              repeat:
                type: boolean
              verify:
                type: boolean
            type: object
          status:
            description: BackupJobStatus defines the observed state of BackupJob
            properties:
              backedUpItems:
                type: integer
              completionTimestamp:
                format: date-time
                type: string
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              details:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              errors:
                items:
                  type: string
                type: array
              exportResult:
                properties:
                  DataExportRef:
                    description: 'ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID
                      not honored" or "name must be restricted". Those cannot be well
                      described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.  Kind
                      is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don''t make new
                      APIs embed an underspecified API type they do not control. Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      .'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  ExportStatus:
                    type: string
                type: object
              exportScheduledAt:
                format: date-time
                type: string
              itinerary:
                type: string
              namespaces:
                items:
                  description: UnhealthyNamespace is a store for unhealthy resources
                    in a namespace
                  properties:
                    name:
                      type: string
                    workloads:
                      items:
                        description: Workload is a store for unhealthy resource and
                          it's dependents
                        properties:
                          name:
                            type: string
                          resources:
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - name
                  - workloads
                  type: object
                type: array
              phase:
                type: string
              startTimestamp:
                format: date-time
                type: string
              steps:
                description: StepProgress records history of a group steps' execution
                properties:
                  errorStep:
                    description: StepInfo includes details of a step's execution
                    properties:
                      completionTimestamp:
                        format: date-time
                        type: string
                      errorCount:
                        additionalProperties:
                          type: integer
                        type: object
                      firstFailureTimeStamp:
                        format: date-time
                        type: string
                      name:
                        type: string
                      retryTimes:
                        type: integer
                      startTimestamp:
                        format: date-time
                        type: string
                    type: object
                  history:
                    items:
                      description: StepInfo includes details of a step's execution
                      properties:
                        completionTimestamp:
                          format: date-time
                          type: string
                        errorCount:
                          additionalProperties:
                            type: integer
                          type: object
                        firstFailureTimeStamp:
                          format: date-time
                          type: string
                        name:
                          type: string
                        retryTimes:
                          type: integer
                        startTimestamp:
                          format: date-time
                          type: string
                      type: object
                    type: array
                  maxRetryCount:
                    type: integer
                  stepFailureTimeoutSeconds:
                    type: integer
                  totalRetryCount:
                    type: integer
                type: object
              stopTimestamp:
                format: date-time
                type: string
              submitTimestamp:
                format: date-time
                type: string
              totalItems:
                type: integer
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: backupjobs.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: BackupJob
    listKind: BackupJobList
    plural: backupjobs
    singular: backupjob
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupJob is the Schema for the backupjobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupJobSpec defines the desired state of BackupJob
            properties:
              action:
                description: Action for this job, { start, cancel }
                type: string
              backupName:
                description: BackupName is Backup plan name
                type: string
              backupPlanRef:
                description: BackupPlanRef is Backup Plan spec pointer. Created at
                  plan creation, and readonly
                properties:
                  clusterName:
                    description: Name of the cluster CR
                    type: string
                  copyMethod:
                    description: Copy method, in {"filesystem", "snapshot"}, default
                      is "filesystem"
                    type: string
                  desc:
                    description: Desc is description for a backup plan.
                    type: string
                  displayName:
                    description: DisplayName is human-readable name
                    type: string
                  excludePV:
                    description: Exclude PV as backup resource, default is false
                    type: boolean
                  filters:
                    properties:
                      excludeClusterResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      excludeResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      includeClusterResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      includeResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      selector:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                    type: object
                  namespaces:
                    items:
                      type: string
                    type: array
                  policy:
                    description: Policy of the backup plan. Default is on demand backup,
                      retention is default to 7 days
                    properties:
                      desc:
                        description: Desc provides detailed description
                        type: string
                      displayName:
                        description: DisplayName is human-readable name
                        type: string
                      exportData:
                        description: ExportData is true when you want to export data
                          of a backup, only work for CopyMethod=snapshot.
                        type: boolean
                      frequency:
                        description: Frequency of the backup, follow cron job string
                          format
                        type: string
                      name:
                        description: Name of the policy
                        type: string
                      pause:
                        description: Pause true means scheduled backup is paused
                        type: boolean
                      repeat:
                        description: Repeat true means scheduled backup, false means
                          on demand backup
                        type: boolean
                      retention:
                        description: Retention of the backup, unit is hour
                        type: integer
                      snapshotLimit:
                        description: SnapshotLimit is the maximum number of snapshots
                          that will be retained.
                        type: integer
                    type: object
                  storageName:
                    description: Name of the storage CR
                    type: string
                  storageRef:
                    description: Storage spec structure is embeded as a pointer here.
                      Created at plan creation, and only changed when StorageName
                      is changed.
                    properties:
                      desc:
                        description: Desc provides detailed description
                        type: string
                      displayName:
                        description: DisplayName is human-readable name
                        type: string
                      isDefaultStorage:
                        description: IsDefaultStorage indicates it is default storage
                          for use
                        type: boolean
                      s3Config:
                        description: S3Config includes S3 access configuration
                        properties:
                          accessKeyId:
                            description: AccessKeyId is S3 aws-access-key-id
                            type: string
                          bucket:
                            description: Bucket is S3 bucket name
                            type: string
                          credsSecretName:
                            description: CredsSecretName links to a secret to access
                              S3 object
                            type: string
                          insecure:
                            description: Insecure indicates not to verify https of
                              s3url
                            type: boolean
                          region:
                            description: Region is S3 region
                            type: string
                          s3url:
                            description: S3URL is s3 URL
                            type: string
                          secretAccessKey:
                            description: SecretAccessKey is S3 aws-secret-access-key
                            type: string
                        required:
                        - accessKeyId
                        - bucket
                        - s3url
                        - secretAccessKey
                        type: object
                      s3Provider:
                        description: S3Provider is cloud provider for S3 service
                        type: string
                      tenant:
                        description: Tenant is global unique tenant id of a user
                        type: string
                      volumeSnapshotConfig:
                        description: VolumeSnapshotConfig includes configuration for
                          volume snapshot
                        properties:
                          credsSecretName:
                            description: CredsSecretName links to a secret which includes
                              EBS volume snapshot credential
                            type: string
                          region:
                            description: Region is region of EBS volume in public
                              cloud environment
                            type: string
                        type: object
                      volumeSnapshotProvider:
                        description: VolumeSnapshotProvider is cloud provider for
                          volume snapshot service
                        type: string
                    required:
                    - tenant
                    type: object
                  templates:
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  tenant:
                    description: Tenant is global unique tenant id of a user
                    type: string
                required:
                - clusterName
                - storageName
                - tenant
                type: object
              desc:
                description: Desc provides detailed description
                type: string
              displayName:
                description: DisplayName is human-readable name
                type: string
              exportData:
                type: boolean
              tenant:
                description: Tenant is Unique name of tenant
                type: string
            required:
            - backupName
            - tenant
            type: object
          status:
            description: BackupJobStatus defines the observed state of BackupJob
            properties:
              conditions:
                description: Conditions describes the detailed state of BackupJob
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              errors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      items:
                        type: string
                      type: array
                    severity:
                      type: string
                  type: object
                type: array
              exportResult:
                properties:
                  DataExportRef:
                    description: 'ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID
                      not honored" or "name must be restricted". Those cannot be well
                      described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.  Kind
                      is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don''t make new
                      APIs embed an underspecified API type they do not control. Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      .'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  ExportStatus:
                    type: string
                type: object
              phase:
                description: Phase describes the overall status of BackupJob
                type: string
              progress:
                description: Progress describes the overall progress of BackupJob
                properties:
                  stepsCompleted:
                    type: integer
                  totalSteps:
                    type: integer
                type: object
              report:
                description: Report provides a summary status of backup job execution
                properties:
                  backedUpItems:
                    description: Backed up items
                    type: integer
                  details:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Resource details
                    type: object
                  endTime:
                    description: EndTime is the time backup job is completed
                    format: date-time
                    type: string
                  expiredTime:
                    description: ExpiredTime is the time backup data is expired and
                      deleted
                    format: date-time
                    type: string
                  pvList:
                    description: PV details
                    items:
                      description: List pv details including pvc name, storageclass
                        name
                      properties:
                        pvName:
                          type: string
                        pvc:
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                        storageClassName:
                          type: string
                      type: object
                    type: array
                  startTime:
                    description: StartTime is the time backup job is executed
                    format: date-time
                    type: string
                  submitTime:
                    description: SubmitTime is when the backup job is submitted from
                      user
                    format: date-time
                    type: string
                  totalItems:
                    description: Total items for backup
                    type: integer
                  totalPVC:
                    description: TotalPVC is number of PVC preserved in the backup
                      job
                    type: integer
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: backupplans.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: BackupPlan
    listKind: BackupPlanList
    plural: backupplans
    singular: backupplan
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupPlan is the Schema for the backupplans API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupPlanSpec defines the desired state of BackupPlan
            properties:
              clusterName:
                description: Name of the cluster CR
                type: string
              copyMethod:
                description: Copy method, in {"filesystem", "snapshot"}, default is
                  "filesystem"
                type: string
              desc:
                description: Desc is description for a backup plan.
                type: string
              displayName:
                description: DisplayName is human-readable name
                type: string
              excludePV:
                description: Exclude PV as backup resource, default is false
                type: boolean
              filters:
                properties:
                  excludeClusterResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  excludeResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  includeClusterResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  includeResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  selector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
              namespaces:
                items:
                  type: string
                type: array
              policy:
                description: Policy of the backup plan. Default is on demand backup,
                  retention is default to 7 days
                properties:
                  desc:
                    description: Desc provides detailed description
                    type: string
                  displayName:
                    description: DisplayName is human-readable name
                    type: string
                  exportData:
                    description: ExportData is true when you want to export data of
                      a backup, only work for CopyMethod=snapshot.
                    type: boolean
                  frequency:
                    description: Frequency of the backup, follow cron job string format
                    type: string
                  name:
                    description: Name of the policy
                    type: string
                  pause:
                    description: Pause true means scheduled backup is paused
                    type: boolean
                  repeat:
                    description: Repeat true means scheduled backup, false means on
                      demand backup
                    type: boolean
                  retention:
                    description: Retention of the backup, unit is hour
                    type: integer
                  snapshotLimit:
                    description: SnapshotLimit is the maximum number of snapshots
                      that will be retained.
                    type: integer
                type: object
              storageName:
                description: Name of the storage CR
                type: string
              storageRef:
                description: Storage spec structure is embeded as a pointer here.
                  Created at plan creation, and only changed when StorageName is changed.
                properties:
                  desc:
                    description: Desc provides detailed description
                    type: string
                  displayName:
                    description: DisplayName is human-readable name
                    type: string
                  isDefaultStorage:
                    description: IsDefaultStorage indicates it is default storage
                      for use
                    type: boolean
                  s3Config:
                    description: S3Config includes S3 access configuration
                    properties:
                      accessKeyId:
                        description: AccessKeyId is S3 aws-access-key-id
                        type: string
                      bucket:
                        description: Bucket is S3 bucket name
                        type: string
                      credsSecretName:
                        description: CredsSecretName links to a secret to access S3
                          object
                        type: string
                      insecure:
                        description: Insecure indicates not to verify https of s3url
                        type: boolean
                      region:
                        description: Region is S3 region
                        type: string
                      s3url:
                        description: S3URL is s3 URL
                        type: string
                      secretAccessKey:
                        description: SecretAccessKey is S3 aws-secret-access-key
                        type: string
                    required:
                    - accessKeyId
                    - bucket
                    - s3url
                    - secretAccessKey
                    type: object
                  s3Provider:
                    description: S3Provider is cloud provider for S3 service
                    type: string
                  tenant:
                    description: Tenant is global unique tenant id of a user
                    type: string
                  volumeSnapshotConfig:
                    description: VolumeSnapshotConfig includes configuration for volume
                      snapshot
                    properties:
                      credsSecretName:
                        description: CredsSecretName links to a secret which includes
                          EBS volume snapshot credential
                        type: string
                      region:
                        description: Region is region of EBS volume in public cloud
                          environment
                        type: string
                    type: object
                  volumeSnapshotProvider:
                    description: VolumeSnapshotProvider is cloud provider for volume
                      snapshot service
                    type: string
                required:
                - tenant
                type: object
              templates:
                items:
                  items:
                    type: string
                  type: array
                type: array
              tenant:
                description: Tenant is global unique tenant id of a user
                type: string
            required:
            - clusterName
            - storageName
            - tenant
            type: object
          status:
            description: BackupPlanStatus defines the observed state of BackupPlan
            properties:
              conditions:
                description: Conditions describes the detailed state of backup plan
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              currentJobName:
                description: CurrentJobName is the backup job is latest backup job
                type: string
              currentJobPhase:
                description: CurrentJobPhase is the phase of latest backup job
                type: string
              errors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      items:
                        type: string
                      type: array
                    severity:
                      type: string
                  type: object
                type: array
              jobDetail:
                additionalProperties:
                  type: string
                description: JobDetail is some detail info of jobs that referring
                  this plan
                type: object
              phase:
                description: Phase describes the overall status of backup plan
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: backuppolicies.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: BackupPolicy
    listKind: BackupPolicyList
    plural: backuppolicies
    shortNames:
    - bp
    singular: backuppolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Display name of the backupPolicy
      jsonPath: .spec.displayName
      name: ALIAS
      type: string
    - description: Copy method of the backupPolicy
      jsonPath: .spec.profile.copyMethod
      name: COPY METHOD
      type: string
    - description: Resource type of the backupPolicy
      jsonPath: .spec.resourceType
      name: RESOURCE TYPE
      type: string
    - description: Frequency of the backupPolicy
      jsonPath: .spec.frequency
      name: FREQUENCY
      type: string
    - description: Retention of the backupPolicy, in hours
      jsonPath: .spec.retention
      name: RETENTION
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BackupPolicy is the Schema for the backuppolicies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupPolicySpec defines the desired state of BackupPolicy
            properties:
              description:
                type: string
              displayName:
                type: string
              frequency:
                type: string
              profile:
                properties:
                  copyMethod:
                    enum:
                    - filesystem
                    - snapshot
                    type: string
                  filesystem:
                    type: object
                  snapshot:
                    properties:
                      export:
                        properties:
                          dataRepo:
                            properties:
                              provider:
                                type: string
                              storage:
                                type: string
                              transportType:
                                type: string
                              type:
                                type: string
                            type: object
                          executeSchedule:
                            type: string
                          exportSchedule:
                            type: string
                          frequency:
                            type: integer
                          retention:
                            type: integer
                          times:
                            items:
                              type: string
                            type: array
                          type:
                            type: string
                        type: object
                      snapshotLimit:
                        type: integer
                    type: object
                type: object
              resourceType:
                enum:
                - default
                - dataOnly
                - resourceOnly
                type: string
              retention:
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: backups.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: Backup
    listKind: BackupList
    plural: backups
    singular: backup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Backup is the Schema for the backups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupSpec defines the desired state of Backup
            properties:
              closed:
                type: boolean
              exportPolicy:
                description: DataExportPolicy defines the data export policy for backup.
                  Deprecated
                properties:
                  dataRepo:
                    description: migstorage reference
                    properties:
                      provider:
                        type: string
                      storageRef:
                        description: 'ObjectReference contains enough information
                          to let you inspect or modify the referred object. --- New
                          uses of this type are discouraged because of difficulty
                          describing its usage when embedded in APIs. 1. Ignored fields.  It
                          includes many fields which are not generally honored.  For
                          instance, ResourceVersion and FieldPath are both very rarely
                          valid in actual usage. 2. Invalid usage help.  It is impossible
                          to add specific help for individual usage.  In most embedded
                          usages, there are particular restrictions like, "must refer
                          only to types A and B" or "UID not honored" or "name must
                          be restricted". Those cannot be well described when embedded.
                          3. Inconsistent validation.  Because the usages are different,
                          the validation rules are different by usage, which makes
                          it hard for users to predict what will happen. 4. The fields
                          are both imprecise and overly precise.  Kind is not a precise
                          mapping to a URL. This can produce ambiguity during interpretation
                          and require a REST mapping.  In most cases, the dependency
                          is on the group,resource tuple and the version of the actual
                          struct is irrelevant. 5. We cannot easily change it.  Because
                          this type is embedded in many locations, updates to this
                          type will affect numerous schemas.  Don''t make new APIs
                          embed an underspecified API type they do not control. Instead
                          of using this type, create a locally provided and used type
                          that is well-focused on your reference. For example, ServiceReferences
                          for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                          .'
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      transportType:
                        type: string
                      type:
                        type: string
                    required:
                    - provider
                    - transportType
                    - type
                    type: object
                  executeSchedule:
                    type: string
                  exportData:
                    type: boolean
                  exportFrequency:
                    type: integer
                  exportSchedule:
                    type: string
                  exportTimes:
                    items:
                      type: string
                    type: array
                  exportType:
                    type: string
                type: object
              fallbackToDefault:
                description: FallbackToDefault is a flag if you want to fall back
                  to default cluster or storage if it is empty
                type: boolean
              filters:
                properties:
                  excludeClusterResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  excludeResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  includeClusterResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  includeResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  selector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
              hooks:
                items:
                  description: MigPlanHook hold a referene to a MigHook along with
                    the desired phase to run it in
                  properties:
                    executionNamespace:
                      type: string
                    phase:
                      type: string
                    reference:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs. 1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage. 2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular restrictions like, "must refer
                        only to types A and B" or "UID not honored" or "name must
                        be restricted". Those cannot be well described when embedded.
                        3. Inconsistent validation.  Because the usages are different,
                        the validation rules are different by usage, which makes it
                        hard for users to predict what will happen. 4. The fields
                        are both imprecise and overly precise.  Kind is not a precise
                        mapping to a URL. This can produce ambiguity during interpretation
                        and require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple and the version of the actual
                        struct is irrelevant. 5. We cannot easily change it.  Because
                        this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don''t make new APIs embed
                        an underspecified API type they do not control. Instead of
                        using this type, create a locally provided and used type that
                        is well-focused on your reference. For example, ServiceReferences
                        for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    serviceAccount:
                      type: string
                    type:
                      type: string
                  required:
                  - phase
                  - reference
                  - type
                  type: object
                type: array
              migStorageRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              namespaces:
                items:
                  type: string
                type: array
              persistentVolumes:
                items:
                  description: Name - The PV name. Capacity - The PV storage capacity.
                    StorageClass - The PV storage class name. Supported - Lists of
                    what is supported. Selection - Choices made from supported. PVC
                    - Associated PVC. NFS - NFS properties. staged - A PV has been
                    explicitly added/updated.
                  properties:
                    capacity:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    name:
                      type: string
                    pvc:
                      description: PVC
                      properties:
                        accessModes:
                          items:
                            type: string
                          type: array
                        hasReference:
                          type: boolean
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                    selection:
                      description: Selection Action - The PV migration action (move|copy|skip)
                        StorageClass - The PV storage class name to use in the destination
                        cluster. AccessMode   - The PV access mode to use in the destination
                        cluster, if different from src PVC AccessMode CopyMethod   -
                        The PV copy method to use ('filesystem' for restic copy, or
                        'snapshot' for velero snapshot plugin) Verify       - Whether
                        or not to verify copied volume data if CopyMethod is 'filesystem'
                      properties:
                        accessMode:
                          type: string
                        action:
                          type: string
                        copyMethod:
                          type: string
                        storageClass:
                          type: string
                        verify:
                          type: boolean
                      type: object
                    storageClass:
                      type: string
                    supported:
                      description: Supported Actions     - The list of supported actions
                        CopyMethods - The list of supported copy methods
                      properties:
                        actions:
                          items:
                            type: string
                          type: array
                        copyMethods:
                          items:
                            type: string
                          type: array
                      required:
                      - actions
                      - copyMethods
                      type: object
                  required:
                  - selection
                  - supported
                  type: object
                type: array
              policy:
                description: BackupPolicy defines the policy for backup. Deprecated
                properties:
                  copyMethod:
                    type: string
                  frequency:
                    description: "Cron job like frequency Refer to https://en.wikipedia.org/wiki/Cron
                      for format \n Predefined schedules: Entry                  |
                      Description                                | Equivalent To -----
                      \                 | -----------                                |
                      ------------- @yearly (or @annually) | Run once a year, midnight,
                      Jan. 1st        | 0 0 1 1 * @monthly               | Run once
                      a month, midnight, first of month | 0 0 1 * * @weekly                |
                      Run once a week, midnight between Sat/Sun  | 0 0 * * 0 @daily
                      (or @midnight)  | Run once a day, midnight                   |
                      0 0 * * * @hourly                | Run once an hour, beginning
                      of hour        | 0 * * * * \n Intervals: @every <duration> example:
                      \"@every 2h\" means a schedule that activates every 2 hours
                      since backup plan added"
                    type: string
                  name:
                    type: string
                  pause:
                    type: boolean
                  repeat:
                    type: boolean
                  retention:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                  snapshotKeptMaxCount:
                    type: integer
                type: object
              policyName:
                type: string
              policyOverrides:
                properties:
                  frequency:
                    type: string
                  profile:
                    properties:
                      copyMethod:
                        enum:
                        - filesystem
                        - snapshot
                        type: string
                      filesystem:
                        type: object
                      snapshot:
                        properties:
                          export:
                            properties:
                              dataRepo:
                                properties:
                                  provider:
                                    type: string
                                  storage:
                                    type: string
                                  transportType:
                                    type: string
                                  type:
                                    type: string
                                type: object
                              executeSchedule:
                                type: string
                              exportSchedule:
                                type: string
                              frequency:
                                type: integer
                              retention:
                                type: integer
                              times:
                                items:
                                  type: string
                                type: array
                              type:
                                type: string
                            type: object
                          snapshotLimit:
                            type: integer
                        type: object
                    type: object
                  resourceType:
                    enum:
                    - default
                    - dataOnly
                    - resourceOnly
                    type: string
                  retention:
                    type: integer
                type: object
              scheduleDisabled:
                type: boolean
              srcClusterRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              templates:
                items:
                  items:
                    type: string
                  type: array
                type: array
            type: object
          status:
            description: BackupStatus defines the observed state of Backup
            properties:
              addedTimestamp:
                format: date-time
                type: string
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              currentJobName:
                type: string
              incompatibleNamespaces:
                items:
                  description: IncompatibleNamespace - namespace, which is noticed
                    to contain resources incompatible by the migration
                  properties:
                    gvks:
                      items:
                        description: IncompatibleGVK - custom structure for printing
                          GVKs lowercase
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          version:
                            type: string
                        required:
                        - group
                        - kind
                        - version
                        type: object
                      type: array
                    name:
                      type: string
                  required:
                  - gvks
                  - name
                  type: object
                type: array
              namespaces:
                items:
                  description: UnhealthyNamespace is a store for unhealthy resources
                    in a namespace
                  properties:
                    name:
                      type: string
                    workloads:
                      items:
                        description: Workload is a store for unhealthy resource and
                          it's dependents
                        properties:
                          name:
                            type: string
                          resources:
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - name
                  - workloads
                  type: object
                type: array
              nextBackupTime:
                format: date-time
                type: string
              nextExportTime:
                format: date-time
                type: string
              policy:
                properties:
                  copyMethod:
                    type: string
                  export:
                    properties:
                      executeSchedule:
                        type: string
                      exportSchedule:
                        type: string
                      frequency:
                        type: integer
                      times:
                        items:
                          type: string
                        type: array
                      type:
                        type: string
                    type: object
                  frequency:
                    type: string
                  resourceType:
                    enum:
                    - default
                    - dataOnly
                    - resourceOnly
                    type: string
                  retention:
                    type: integer
                  snapshotLimit:
                    type: integer
                type: object
              resourceFilterRules:
                properties:
                  namespaces:
                    items:
                      type: string
                    type: array
                  templates:
                    items:
                      items:
                        properties:
                          excludeClusterResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          excludeResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          includeClusterResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          includeResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          namespaces:
                            items:
                              type: string
                            type: array
                          selector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          templateName:
                            type: string
                        type: object
                      type: array
                    type: array
                type: object
              state:
                type: string
              storage:
                properties:
                  name:
                    type: string
                  provider:
                    type: string
                  ready:
                    type: boolean
                type: object
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: backuptemplates.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: BackupTemplate
    listKind: BackupTemplateList
    plural: backuptemplates
    shortNames:
    - bt
    singular: backuptemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BackupTemplate is the Schema for the backuptemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupTemplateSpec defines the desired state of BackupTemplate
            properties:
              excludeClusterResources:
                items:
                  properties:
                    group:
                      type: string
                    names:
                      items:
                        type: string
                      type: array
                    resource:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              excludeResources:
                items:
                  properties:
                    group:
                      type: string
                    names:
                      items:
                        type: string
                      type: array
                    resource:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              includeClusterResources:
                items:
                  properties:
                    group:
                      type: string
                    names:
                      items:
                        type: string
                      type: array
                    resource:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              includeResources:
                items:
                  properties:
                    group:
                      type: string
                    names:
                      items:
                        type: string
                      type: array
                    resource:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              namespaceSelector:
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                  names:
                    items:
                      type: string
                    type: array
                type: object
              selector:
                description: A label selector is a label query over a set of resources.
                  The result of matchLabels and matchExpressions are ANDed. An empty
                  label selector matches all objects. A null label selector matches
                  no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            type: object
          status:
            properties:
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              valid:
                type: boolean
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clusters.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              apiEndpoint:
                description: APIEndpoint is API endpoint
                type: string
              desc:
                description: Desc is description for a cluster.
                type: string
              displayName:
                description: DisplayName is human-readable name
                type: string
              excludedNamespaces:
                description: ExcludedNamespaces indicates the namespaces is excluded
                  for backup management
                items:
                  type: string
                type: array
              extraParams:
                additionalProperties:
                  type: string
                description: ExtraParams store cluster's extra parameters
                type: object
              kubeconfig:
                description: KubeConfig provides the access information of the cluster
                type: string
              provider:
                description: Provider
                type: string
              region:
                description: Region reflects cloud region of running cluster
                type: string
              role:
                description: Role indicates the cluster type for multi-cluster environment
                type: string
              secretName:
                description: SecretName is Secret name
                type: string
              snapshotClasses:
                description: SnapshotClasses contain the available volumeSnapshotClass
                  of the cluster if not empty
                items:
                  properties:
                    deletionPolicy:
                      type: string
                    driver:
                      type: string
                    name:
                      type: string
                  required:
                  - deletionPolicy
                  - driver
                  - name
                  type: object
                type: array
              storageClasses:
                description: StorageClasses contain the available storageclasses of
                  the cluster if not empty
                items:
                  properties:
                    accessModes:
                      items:
                        type: string
                      type: array
                    default:
                      type: boolean
                    name:
                      type: string
                    provisioner:
                      type: string
                  type: object
                type: array
              tenant:
                description: Tenant is global unique tenant id of a user
                type: string
              zone:
                description: Zone reflects available zone of running cluster
                type: string
            required:
            - kubeconfig
            - tenant
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              conditions:
                description: Conditions describes the detailed state of cluster
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              errors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      items:
                        type: string
                      type: array
                    severity:
                      type: string
                  type: object
                type: array
              phase:
                description: Phase describes the overall status of Cluster
                type: string
              version:
                description: Version reflects the k8s version of cluster
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: dataexports.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: DataExport
    listKind: DataExportList
    plural: dataexports
    singular: dataexport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataExport is the Schema for the dataexports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataExportSpec defines the desired state of DataExport
            properties:
              backupJobRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              dataRepo:
                description: migstorage reference
                properties:
                  provider:
                    type: string
                  storageRef:
                    description: 'ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID
                      not honored" or "name must be restricted". Those cannot be well
                      described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.  Kind
                      is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don''t make new
                      APIs embed an underspecified API type they do not control. Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      .'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  transportType:
                    type: string
                  type:
                    type: string
                required:
                - provider
                - transportType
                - type
                type: object
              dataSources:
                additionalProperties:
                  properties:
                    dataReference:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs. 1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage. 2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular restrictions like, "must refer
                        only to types A and B" or "UID not honored" or "name must
                        be restricted". Those cannot be well described when embedded.
                        3. Inconsistent validation.  Because the usages are different,
                        the validation rules are different by usage, which makes it
                        hard for users to predict what will happen. 4. The fields
                        are both imprecise and overly precise.  Kind is not a precise
                        mapping to a URL. This can produce ambiguity during interpretation
                        and require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple and the version of the actual
                        struct is irrelevant. 5. We cannot easily change it.  Because
                        this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don''t make new APIs embed
                        an underspecified API type they do not control. Instead of
                        using this type, create a locally provided and used type that
                        is well-focused on your reference. For example, ServiceReferences
                        for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    type:
                      type: string
                  required:
                  - dataReference
                  - type
                  type: object
                type: object
              policy:
                properties:
                  retention:
                    description: A Duration represents the elapsed time between two
                      instants as an int64 nanosecond count. The representation limits
                      the largest representable duration to approximately 290 years.
                    format: int64
                    type: integer
                type: object
              type:
                type: string
            required:
            - backupJobRef
            - type
            type: object
          status:
            description: DataExportStatus defines the observed state of DataExport
            properties:
              completionTimestamp:
                format: date-time
                type: string
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              dataLocations:
                description: RawMessage is a raw encoded JSON value. It implements
                  Marshaler and Unmarshaler and can be used to delay JSON decoding
                  or precompute a JSON encoding.
                format: byte
                type: string
                x-kubernetes-preserve-unknown-fields: true
              dataSources:
                additionalProperties:
                  properties:
                    dataReference:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs. 1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage. 2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular restrictions like, "must refer
                        only to types A and B" or "UID not honored" or "name must
                        be restricted". Those cannot be well described when embedded.
                        3. Inconsistent validation.  Because the usages are different,
                        the validation rules are different by usage, which makes it
                        hard for users to predict what will happen. 4. The fields
                        are both imprecise and overly precise.  Kind is not a precise
                        mapping to a URL. This can produce ambiguity during interpretation
                        and require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple and the version of the actual
                        struct is irrelevant. 5. We cannot easily change it.  Because
                        this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don''t make new APIs embed
                        an underspecified API type they do not control. Instead of
                        using this type, create a locally provided and used type that
                        is well-focused on your reference. For example, ServiceReferences
                        for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    type:
                      type: string
                  required:
                  - dataReference
                  - type
                  type: object
                type: object
              phase:
                type: string
              progress:
                additionalProperties:
                  properties:
                    bytesDone:
                      format: int64
                      type: integer
                    totalBytes:
                      format: int64
                      type: integer
                  type: object
                type: object
              startTimestamp:
                format: date-time
                type: string
              stopTimestamp:
                format: date-time
                type: string
              veleroExportRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: dataimports.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: DataImport
    listKind: DataImportList
    plural: dataimports
    singular: dataimport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataImport is the Schema for the dataimports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataImportSpec defines the desired state of DataImport
            properties:
              actions:
                description: RestoreActions defines the action for a restore
                properties:
                  podNodeSelections:
                    properties:
                      newNodeAffinity:
                        description: Node affinity is a group of node affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      newNodeName:
                        type: string
                      newNodeSelector:
                        additionalProperties:
                          type: string
                        type: object
                      nodeAffinityPluginAction:
                        type: string
                      nodeNamePluginAction:
                        type: string
                      nodeSelectorPluginAction:
                        type: string
                    type: object
                  storageClassMappings:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              dataExportRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              dataImportArray:
                items:
                  properties:
                    dataReference:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs. 1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage. 2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular restrictions like, "must refer
                        only to types A and B" or "UID not honored" or "name must
                        be restricted". Those cannot be well described when embedded.
                        3. Inconsistent validation.  Because the usages are different,
                        the validation rules are different by usage, which makes it
                        hard for users to predict what will happen. 4. The fields
                        are both imprecise and overly precise.  Kind is not a precise
                        mapping to a URL. This can produce ambiguity during interpretation
                        and require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple and the version of the actual
                        struct is irrelevant. 5. We cannot easily change it.  Because
                        this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don''t make new APIs embed
                        an underspecified API type they do not control. Instead of
                        using this type, create a locally provided and used type that
                        is well-focused on your reference. For example, ServiceReferences
                        for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    type:
                      type: string
                  required:
                  - dataReference
                  - type
                  type: object
                type: array
              namespaceMapping:
                additionalProperties:
                  type: string
                type: object
              restoreJobRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            required:
            - dataExportRef
            - restoreJobRef
            type: object
          status:
            description: DataImportStatus defines the observed state of DataImport
            properties:
              completionTimestamp:
                format: date-time
                type: string
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              phase:
                type: string
              progress:
                additionalProperties:
                  properties:
                    bytesDone:
                      format: int64
                      type: integer
                    totalBytes:
                      format: int64
                      type: integer
                  type: object
                type: object
              startTimestamp:
                format: date-time
                type: string
              veleroImportRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: miganalytics.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: MigAnalytic
    listKind: MigAnalyticList
    plural: miganalytics
    singular: miganalytic
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MigAnalytic is the Schema for the miganalytics API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MigAnalyticSpec defines the desired state of MigAnalytic
            properties:
              analyzeImageCount:
                type: boolean
              analyzeK8SResources:
                type: boolean
              analyzePVCapacity:
                type: boolean
              listImages:
                type: boolean
              listImagesLimit:
                type: integer
              planRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              planType:
                description: PlanType defines the type of plan for analytic
                type: string
            required:
            - analyzeImageCount
            - analyzeK8SResources
            - analyzePVCapacity
            - planRef
            - planType
            type: object
          status:
            description: MigAnalyticStatus defines the observed state of MigAnalytic
            properties:
              analytics:
                description: MigAnalyticPlan defines the observed state of MigAnalyticPlan
                properties:
                  excludedk8sResourceTotal:
                    type: integer
                  imageCount:
                    type: integer
                  imageSizeTotal:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  incompatiblek8sResourceTotal:
                    type: integer
                  k8sResourceTotal:
                    type: integer
                  namespaces:
                    items:
                      description: MigAnalyticNamespace defines the observed state
                        of MigAnalyticNamespace
                      properties:
                        excludedK8SResourceTotal:
                          type: integer
                        excludedK8SResources:
                          items:
                            description: MigAnalyticList contains a list of MigAnalytic
                            properties:
                              count:
                                type: integer
                              group:
                                type: string
                              kind:
                                type: string
                              version:
                                type: string
                            required:
                            - count
                            - group
                            - kind
                            - version
                            type: object
                          type: array
                        imageCount:
                          type: integer
                        imageSizeTotal:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        images:
                          items:
                            properties:
                              name:
                                type: string
                              reference:
                                type: string
                              size:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            required:
                            - name
                            - reference
                            - size
                            type: object
                          type: array
                        incompatibleK8SResourceTotal:
                          type: integer
                        incompatibleK8SResources:
                          items:
                            description: MigAnalyticList contains a list of MigAnalytic
                            properties:
                              count:
                                type: integer
                              group:
                                type: string
                              kind:
                                type: string
                              version:
                                type: string
                            required:
                            - count
                            - group
                            - kind
                            - version
                            type: object
                          type: array
                        k8sResourceTotal:
                          type: integer
                        k8sResources:
                          items:
                            description: MigAnalyticList contains a list of MigAnalytic
                            properties:
                              count:
                                type: integer
                              group:
                                type: string
                              kind:
                                type: string
                              version:
                                type: string
                            required:
                            - count
                            - group
                            - kind
                            - version
                            type: object
                          type: array
                        namespace:
                          type: string
                        pvCapacity:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        pvCount:
                          type: integer
                      required:
                      - excludedK8SResourceTotal
                      - imageCount
                      - imageSizeTotal
                      - incompatibleK8SResourceTotal
                      - k8sResourceTotal
                      - namespace
                      - pvCapacity
                      - pvCount
                      type: object
                    type: array
                  percentComplete:
                    type: integer
                  plan:
                    type: string
                  pvCapacity:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  pvCount:
                    type: integer
                required:
                - excludedk8sResourceTotal
                - imageCount
                - imageSizeTotal
                - incompatiblek8sResourceTotal
                - k8sResourceTotal
                - percentComplete
                - plan
                - pvCapacity
                - pvCount
                type: object
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: migclusters.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: MigCluster
    listKind: MigClusterList
    plural: migclusters
    singular: migcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.url
      name: URL
      type: string
    - jsonPath: .status.conditions[?(@.type=='Connected')].status
      name: Connected
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MigCluster is the Schema for the migclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MigClusterSpec defines the desired state of MigCluster
            properties:
              azureResourceGroup:
                description: 'TODO: commonize the provider with migstorage'
                type: string
              caBundle:
                format: byte
                type: string
              clusterRegistry:
                description: ClusterRegistry overrides image registry deployed in
                  corresponding user cluster
                type: string
              ignoredNamespaces:
                items:
                  type: string
                type: array
              insecure:
                type: boolean
              isAdminOnlyCluster:
                description: IsAdminOnlyCluster indicates the host cluster does only
                  backup management with NO app backup requirement
                type: boolean
              isHostCluster:
                type: boolean
              location:
                description: ClusterLocation is meta information of the cluster for
                  app topology discovery
                properties:
                  isOnPublicCloud:
                    type: boolean
                  provider:
                    description: CloudProvider specify the name of cloud, such as
                      aliyun
                    type: string
                  region:
                    type: string
                  zone:
                    type: string
                required:
                - isOnPublicCloud
                - provider
                type: object
              qos:
                description: Qos define for cluster
                properties:
                  customRate:
                    type: integer
                  level:
                    type: string
                  workRange:
                    additionalProperties:
                      description: Qos time ranges
                      properties:
                        startTime:
                          type: string
                        stopTime:
                          type: string
                      type: object
                    type: object
                type: object
              refreshInterval:
                format: int64
                type: integer
              restartRestic:
                type: boolean
              serviceAccountSecretRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              snapshotClasses:
                items:
                  description: Available volumesnapshotclass in the cluster Which
                    has deletion policy retain and velero label
                  properties:
                    deletionPolicy:
                      type: string
                    driver:
                      type: string
                    name:
                      type: string
                  required:
                  - deletionPolicy
                  - driver
                  - name
                  type: object
                type: array
              storageClasses:
                items:
                  description: StorageClass is an available storage class in the cluster
                    Name - the storage class name Provisioner - the dynamic provisioner
                    for the storage class Default - whether or not this storage class
                    is the default AccessModes - access modes supported by the dynamic
                    provisioner
                  properties:
                    accessModes:
                      items:
                        type: string
                      type: array
                    default:
                      type: boolean
                    name:
                      type: string
                    provisioner:
                      type: string
                  type: object
                type: array
              url:
                type: string
            required:
            - isHostCluster
            type: object
          status:
            description: MigClusterStatus defines the observed state of MigCluster
            properties:
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              detectedClusterProvider:
                description: Auto detected cloud provider
                type: string
              isInService:
                type: boolean
              lastRefreshTime:
                format: date-time
                type: string
              qosEnabled:
                type: boolean
              resourceList:
                description: APIResourceList includes all resoure groups and resources
                  from the cluster
                items:
                  properties:
                    groupVersion:
                      type: string
                    resourceKinds:
                      items:
                        properties:
                          kind:
                            type: string
                          resource:
                            type: string
                        required:
                        - kind
                        - resource
                        type: object
                      type: array
                  type: object
                type: array
              userClusterFeatures:
                description: UserClusterFeatures includes all enabled features for
                  the cluster
                items:
                  type: string
                type: array
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: migconfigs.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: Migconfig
    listKind: MigconfigList
    plural: migconfigs
    singular: migconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Current Phase
      jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Created At
      type: string
    - description: Version
      jsonPath: .spec.version
      name: Version
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Migconfig is the Schema for the migconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MigconfigSpec defines the desired state of Migconfig
            properties:
              agentNamespace:
                description: AgentNamespace is the namespace in which the agent (velero,
                  ...) is installed. Default is "qiming-backend"
                type: string
              clientName:
                description: ClientName is the unique name or id of this instace
                maxLength: 128
                minLength: 1
                type: string
              deployResticOnAllNodes:
                type: boolean
              deploymentMode:
                description: DeploymentMode indicates if the installation can support
                  multi-clusters or not
                type: string
              featureParameters:
                additionalProperties:
                  type: string
                description: FeatureParameters indicates the optional feature parameters
                  passed to all components
                type: object
              isAdminCluster:
                description: IsAdminCluster indicates if the cluster is only for backup
                  management or not
                type: boolean
              isUINodePortEnabled:
                description: IsUINodePortEnabled makes UI service to nodeport if true,
                  otherwise to clustertype by default
                type: boolean
              keys:
                description: Keys includes an encrypted identifier of the instance
                type: string
              serviceAccountName:
                description: ServiceAccountName is the service account with all required
                  accesses to do backup and restore
                type: string
              version:
                description: Version specifies the installed version
                type: string
              watchedNamespaces:
                description: WatchedNamespaces indicates multiple namespaces backend
                  controllers need to watch and reconcile
                items:
                  type: string
                type: array
            required:
            - clientName
            - serviceAccountName
            - version
            type: object
          status:
            description: MigconfigStatus defines the observed state of Migconfig
            properties:
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              images:
                properties:
                  controller:
                    properties:
                      actualImage:
                        description: ActualImage can be updated by each component
                          later
                        type: string
                      desiredImage:
                        description: DesiredImage is set by the operator
                        type: string
                    type: object
                  discovery:
                    properties:
                      actualImage:
                        description: ActualImage can be updated by each component
                          later
                        type: string
                      desiredImage:
                        description: DesiredImage is set by the operator
                        type: string
                    type: object
                  minio:
                    properties:
                      actualImage:
                        description: ActualImage can be updated by each component
                          later
                        type: string
                      desiredImage:
                        description: DesiredImage is set by the operator
                        type: string
                    type: object
                  ui:
                    properties:
                      actualImage:
                        description: ActualImage can be updated by each component
                          later
                        type: string
                      desiredImage:
                        description: DesiredImage is set by the operator
                        type: string
                    type: object
                type: object
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: mighooks.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: MigHook
    listKind: MigHookList
    plural: mighooks
    singular: mighook
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MigHook is the Schema for the mighooks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MigHookSpec defines the desired state of MigHook
            properties:
              activeDeadlineSeconds:
                format: int64
                type: integer
              command:
                type: string
              custom:
                type: boolean
              hookName:
                type: string
              image:
                type: string
              operation:
                type: string
              playbook:
                type: string
              targetCluster:
                type: string
            required:
            - custom
            - image
            - targetCluster
            type: object
          status:
            description: MigHookStatus defines the observed state of MigHook
            properties:
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: migmigrations.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: MigMigration
    listKind: MigMigrationList
    plural: migmigrations
    singular: migmigration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .spec.migPlanRef.name
      name: Plan
      type: string
    - jsonPath: .spec.stage
      name: Stage
      type: string
    - jsonPath: .status.itinerary
      name: Itinerary
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MigMigration is the Schema for the migmigrations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MigMigrationSpec defines the desired state of MigMigration
            properties:
              actions:
                description: RestoreActions defines the action for a restore
                properties:
                  podNodeSelections:
                    properties:
                      newNodeAffinity:
                        description: Node affinity is a group of node affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      newNodeName:
                        type: string
                      newNodeSelector:
                        additionalProperties:
                          type: string
                        type: object
                      nodeAffinityPluginAction:
                        type: string
                      nodeNamePluginAction:
                        type: string
                      nodeSelectorPluginAction:
                        type: string
                    type: object
                  storageClassMappings:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              canceled:
                type: boolean
              keepAnnotations:
                type: boolean
              migPlanRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              quiescePods:
                type: boolean
              verify:
                type: boolean
            type: object
          status:
            description: MigMigrationStatus defines the observed state of MigMigration
            properties:
              completionTimestamp:
                format: date-time
                type: string
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              details:
                additionalProperties:
                  items:
                    type: string
                  type: array
                type: object
              errors:
                items:
                  type: string
                type: array
              itinerary:
                type: string
              namespaces:
                items:
                  description: UnhealthyNamespace is a store for unhealthy resources
                    in a namespace
                  properties:
                    name:
                      type: string
                    workloads:
                      items:
                        description: Workload is a store for unhealthy resource and
                          it's dependents
                        properties:
                          name:
                            type: string
                          resources:
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - name
                  - workloads
                  type: object
                type: array
              phase:
                type: string
              results:
                additionalProperties:
                  description: Velero restore result
                  properties:
                    cluster:
                      description: Cluster is a slice of messages related to restoring
                        cluster- scoped resources.
                      items:
                        type: string
                      type: array
                    namespaces:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Namespaces is a map of namespace name to slice
                        of messages related to restoring namespace-scoped resources.
                      type: object
                    velero:
                      description: Velero messages
                      items:
                        type: string
                      type: array
                  type: object
                type: object
              startTimestamp:
                format: date-time
                type: string
              steps:
                description: StepProgress records history of a group steps' execution
                properties:
                  errorStep:
                    description: StepInfo includes details of a step's execution
                    properties:
                      completionTimestamp:
                        format: date-time
                        type: string
                      errorCount:
                        additionalProperties:
                          type: integer
                        type: object
                      firstFailureTimeStamp:
                        format: date-time
                        type: string
                      name:
                        type: string
                      retryTimes:
                        type: integer
                      startTimestamp:
                        format: date-time
                        type: string
                    type: object
                  history:
                    items:
                      description: StepInfo includes details of a step's execution
                      properties:
                        completionTimestamp:
                          format: date-time
                          type: string
                        errorCount:
                          additionalProperties:
                            type: integer
                          type: object
                        firstFailureTimeStamp:
                          format: date-time
                          type: string
                        name:
                          type: string
                        retryTimes:
                          type: integer
                        startTimestamp:
                          format: date-time
                          type: string
                      type: object
                    type: array
                  maxRetryCount:
                    type: integer
                  stepFailureTimeoutSeconds:
                    type: integer
                  totalRetryCount:
                    type: integer
                type: object
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: migplans.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: MigPlan
    listKind: MigPlanList
    plural: migplans
    singular: migplan
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MigPlan is the Schema for the migplans API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MigPlanSpec defines the desired state of MigPlan
            properties:
              actions:
                description: RestoreActions defines the action for a restore
                properties:
                  podNodeSelections:
                    properties:
                      newNodeAffinity:
                        description: Node affinity is a group of node affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      newNodeName:
                        type: string
                      newNodeSelector:
                        additionalProperties:
                          type: string
                        type: object
                      nodeAffinityPluginAction:
                        type: string
                      nodeNamePluginAction:
                        type: string
                      nodeSelectorPluginAction:
                        type: string
                    type: object
                  storageClassMappings:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              closed:
                type: boolean
              destMigClusterRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              forceOverwrite:
                type: boolean
              hooks:
                items:
                  description: MigPlanHook hold a referene to a MigHook along with
                    the desired phase to run it in
                  properties:
                    executionNamespace:
                      type: string
                    phase:
                      type: string
                    reference:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs. 1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage. 2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular restrictions like, "must refer
                        only to types A and B" or "UID not honored" or "name must
                        be restricted". Those cannot be well described when embedded.
                        3. Inconsistent validation.  Because the usages are different,
                        the validation rules are different by usage, which makes it
                        hard for users to predict what will happen. 4. The fields
                        are both imprecise and overly precise.  Kind is not a precise
                        mapping to a URL. This can produce ambiguity during interpretation
                        and require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple and the version of the actual
                        struct is irrelevant. 5. We cannot easily change it.  Because
                        this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don''t make new APIs embed
                        an underspecified API type they do not control. Instead of
                        using this type, create a locally provided and used type that
                        is well-focused on your reference. For example, ServiceReferences
                        for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    serviceAccount:
                      type: string
                    type:
                      type: string
                  required:
                  - phase
                  - reference
                  - type
                  type: object
                type: array
              migStorageRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              namespaces:
                items:
                  type: string
                type: array
              persistentVolumes:
                items:
                  description: Name - The PV name. Capacity - The PV storage capacity.
                    StorageClass - The PV storage class name. Supported - Lists of
                    what is supported. Selection - Choices made from supported. PVC
                    - Associated PVC. NFS - NFS properties. staged - A PV has been
                    explicitly added/updated.
                  properties:
                    capacity:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    name:
                      type: string
                    pvc:
                      description: PVC
                      properties:
                        accessModes:
                          items:
                            type: string
                          type: array
                        hasReference:
                          type: boolean
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                    selection:
                      description: Selection Action - The PV migration action (move|copy|skip)
                        StorageClass - The PV storage class name to use in the destination
                        cluster. AccessMode   - The PV access mode to use in the destination
                        cluster, if different from src PVC AccessMode CopyMethod   -
                        The PV copy method to use ('filesystem' for restic copy, or
                        'snapshot' for velero snapshot plugin) Verify       - Whether
                        or not to verify copied volume data if CopyMethod is 'filesystem'
                      properties:
                        accessMode:
                          type: string
                        action:
                          type: string
                        copyMethod:
                          type: string
                        storageClass:
                          type: string
                        verify:
                          type: boolean
                      type: object
                    storageClass:
                      type: string
                    supported:
                      description: Supported Actions     - The list of supported actions
                        CopyMethods - The list of supported copy methods
                      properties:
                        actions:
                          items:
                            type: string
                          type: array
                        copyMethods:
                          items:
                            type: string
                          type: array
                      required:
                      - actions
                      - copyMethods
                      type: object
                  required:
                  - selection
                  - supported
                  type: object
                type: array
              srcMigClusterRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            type: object
          status:
            description: MigPlanStatus defines the observed state of MigPlan
            properties:
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              excludedResources:
                items:
                  type: string
                type: array
              incompatibleNamespaces:
                items:
                  description: IncompatibleNamespace - namespace, which is noticed
                    to contain resources incompatible by the migration
                  properties:
                    gvks:
                      items:
                        description: IncompatibleGVK - custom structure for printing
                          GVKs lowercase
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          version:
                            type: string
                        required:
                        - group
                        - kind
                        - version
                        type: object
                      type: array
                    name:
                      type: string
                  required:
                  - gvks
                  - name
                  type: object
                type: array
              namespaces:
                items:
                  description: UnhealthyNamespace is a store for unhealthy resources
                    in a namespace
                  properties:
                    name:
                      type: string
                    workloads:
                      items:
                        description: Workload is a store for unhealthy resource and
                          it's dependents
                        properties:
                          name:
                            type: string
                          resources:
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - name
                  - workloads
                  type: object
                type: array
              observedDigest:
                type: string
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: migstorages.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: MigStorage
    listKind: MigStorageList
    plural: migstorages
    singular: migstorage
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MigStorage is the Schema for the migstorages API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MigStorageSpec defines the desired state of MigStorage
            properties:
              backupStorageConfig:
                description: BackupStorageConfig defines config for creating and storing
                  Backups
                properties:
                  awsBucketName:
                    type: string
                  awsKmsKeyId:
                    type: string
                  awsPublicUrl:
                    type: string
                  awsRegion:
                    type: string
                  awsS3ForcePathStyle:
                    type: boolean
                  awsS3Url:
                    type: string
                  awsSignatureVersion:
                    type: string
                  azureResourceGroup:
                    type: string
                  azureStorageAccount:
                    type: string
                  azureStorageContainer:
                    type: string
                  credsSecretRef:
                    description: 'ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID
                      not honored" or "name must be restricted". Those cannot be well
                      described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.  Kind
                      is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don''t make new
                      APIs embed an underspecified API type they do not control. Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      .'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  gcpBucket:
                    type: string
                  insecure:
                    type: boolean
                  s3CustomCABundle:
                    format: byte
                    type: string
                type: object
              backupStorageProvider:
                type: string
              default:
                type: boolean
              quota:
                properties:
                  ClusterCapacityLimitQuota:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    type: object
                  totalCapacityQuota:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              volumeSnapshotConfig:
                description: VolumeSnapshotConfig defines config for taking Volume
                  Snapshots
                properties:
                  awsRegion:
                    type: string
                  azureApiTimeout:
                    type: string
                  azureResourceGroup:
                    type: string
                  credsSecretRef:
                    description: 'ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID
                      not honored" or "name must be restricted". Those cannot be well
                      described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.  Kind
                      is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don''t make new
                      APIs embed an underspecified API type they do not control. Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      .'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  snapshotCreationTimeout:
                    type: string
                type: object
              volumeSnapshotProvider:
                type: string
            required:
            - backupStorageConfig
            - backupStorageProvider
            type: object
          status:
            description: MigStorageStatus defines the observed state of MigStorage
            properties:
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              testResults:
                additionalProperties:
                  description: TestResult defines test result in a managed cluster
                  properties:
                    reason:
                      type: string
                    result:
                      type: string
                  type: object
                type: object
              used:
                anyOf:
                - type: integer
                - type: string
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              usedPerCluster:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                type: object
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: restorejobs.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: RestoreJob
    listKind: RestoreJobList
    plural: restorejobs
    singular: restorejob
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RestoreJob is the Schema for the restorejobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RestoreJobSpec defines the desired state of RestoreJob
            properties:
              actions:
                description: RestoreActions defines the action for a restore
                properties:
                  podNodeSelections:
                    properties:
                      newNodeAffinity:
                        description: Node affinity is a group of node affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      newNodeName:
                        type: string
                      newNodeSelector:
                        additionalProperties:
                          type: string
                        type: object
                      nodeAffinityPluginAction:
                        type: string
                      nodeNamePluginAction:
                        type: string
                      nodeSelectorPluginAction:
                        type: string
                    type: object
                  storageClassMappings:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              backupJobRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              canceled:
                type: boolean
              context:
                description: Context holds the information passed from restorePlan
                  and backupJob
                properties:
                  actions:
                    description: RestoreActions defines the action for a restore
                    properties:
                      podNodeSelections:
                        properties:
                          newNodeAffinity:
                            description: Node affinity is a group of node affinity
                              scheduling rules.
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: The scheduler will prefer to schedule
                                  pods to nodes that satisfy the affinity expressions
                                  specified by this field, but it may choose a node
                                  that violates one or more of the expressions. The
                                  node that is most preferred is the one with the
                                  greatest sum of weights, i.e. for each node that
                                  meets all of the scheduling requirements (resource
                                  request, requiredDuringScheduling affinity expressions,
                                  etc.), compute a sum by iterating through the elements
                                  of this field and adding "weight" to the sum if
                                  the node matches the corresponding matchExpressions;
                                  the node(s) with the highest sum are the most preferred.
                                items:
                                  description: An empty preferred scheduling term
                                    matches all objects with implicit weight 0 (i.e.
                                    it's a no-op). A null preferred scheduling term
                                    matches no objects (i.e. is also a no-op).
                                  properties:
                                    preference:
                                      description: A node selector term, associated
                                        with the corresponding weight.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements
                                            by node's labels.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements
                                            by node's fields.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                      type: object
                                    weight:
                                      description: Weight associated with matching
                                        the corresponding nodeSelectorTerm, in the
                                        range 1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - preference
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the affinity requirements specified
                                  by this field are not met at scheduling time, the
                                  pod will not be scheduled onto the node. If the
                                  affinity requirements specified by this field cease
                                  to be met at some point during pod execution (e.g.
                                  due to an update), the system may or may not try
                                  to eventually evict the pod from its node.
                                properties:
                                  nodeSelectorTerms:
                                    description: Required. A list of node selector
                                      terms. The terms are ORed.
                                    items:
                                      description: A null or empty node selector term
                                        matches no objects. The requirements of them
                                        are ANDed. The TopologySelectorTerm type implements
                                        a subset of the NodeSelectorTerm.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements
                                            by node's labels.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements
                                            by node's fields.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty.
                                                  If the operator is Gt or Lt, the
                                                  values array must have a single
                                                  element, which will be interpreted
                                                  as an integer. This array is replaced
                                                  during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                required:
                                - nodeSelectorTerms
                                type: object
                            type: object
                          newNodeName:
                            type: string
                          newNodeSelector:
                            additionalProperties:
                              type: string
                            type: object
                          nodeAffinityPluginAction:
                            type: string
                          nodeNamePluginAction:
                            type: string
                          nodeSelectorPluginAction:
                            type: string
                        type: object
                      storageClassMappings:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  backupPlan:
                    type: string
                  copyMethod:
                    type: string
                  dataOnly:
                    type: boolean
                  importData:
                    type: boolean
                  namespaceMapping:
                    additionalProperties:
                      type: string
                    type: object
                  resourceFilterRules:
                    properties:
                      namespaces:
                        items:
                          type: string
                        type: array
                      templates:
                        items:
                          items:
                            properties:
                              excludeClusterResources:
                                items:
                                  properties:
                                    group:
                                      type: string
                                    names:
                                      items:
                                        type: string
                                      type: array
                                    resource:
                                      type: string
                                    version:
                                      type: string
                                  type: object
                                type: array
                              excludeResources:
                                items:
                                  properties:
                                    group:
                                      type: string
                                    names:
                                      items:
                                        type: string
                                      type: array
                                    resource:
                                      type: string
                                    version:
                                      type: string
                                  type: object
                                type: array
                              includeClusterResources:
                                items:
                                  properties:
                                    group:
                                      type: string
                                    names:
                                      items:
                                        type: string
                                      type: array
                                    resource:
                                      type: string
                                    version:
                                      type: string
                                  type: object
                                type: array
                              includeResources:
                                items:
                                  properties:
                                    group:
                                      type: string
                                    names:
                                      items:
                                        type: string
                                      type: array
                                    resource:
                                      type: string
                                    version:
                                      type: string
                                  type: object
                                type: array
                              namespaces:
                                items:
                                  type: string
                                type: array
                              selector:
                                description: A label selector is a label query over
                                  a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector
                                  matches all objects. A null label selector matches
                                  no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              templateName:
                                type: string
                            type: object
                          type: array
                        type: array
                    type: object
                  sourceCluster:
                    type: string
                  targetCluster:
                    type: string
                type: object
              inactivated:
                type: boolean
              keepAnnotations:
                type: boolean
              restoreRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              verify:
                type: boolean
            type: object
          status:
            description: RestoreJobStatus defines the observed state of RestoreJob
            properties:
              completionTimestamp:
                format: date-time
                type: string
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              errors:
                items:
                  type: string
                type: array
              importResult:
                properties:
                  dataImportRef:
                    description: 'ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID
                      not honored" or "name must be restricted". Those cannot be well
                      described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.  Kind
                      is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don''t make new
                      APIs embed an underspecified API type they do not control. Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      .'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  importStatus:
                    type: string
                type: object
              itinerary:
                type: string
              namespaces:
                items:
                  description: UnhealthyNamespace is a store for unhealthy resources
                    in a namespace
                  properties:
                    name:
                      type: string
                    workloads:
                      items:
                        description: Workload is a store for unhealthy resource and
                          it's dependents
                        properties:
                          name:
                            type: string
                          resources:
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - name
                  - workloads
                  type: object
                type: array
              phase:
                type: string
              postCheckResult:
                properties:
                  issues:
                    items:
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                        params:
                          additionalProperties:
                            type: string
                          type: object
                        reason:
                          type: string
                      type: object
                    type: array
                  state:
                    type: string
                type: object
              restoredItems:
                type: integer
              results:
                additionalProperties:
                  description: Velero restore result
                  properties:
                    cluster:
                      description: Cluster is a slice of messages related to restoring
                        cluster- scoped resources.
                      items:
                        type: string
                      type: array
                    namespaces:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Namespaces is a map of namespace name to slice
                        of messages related to restoring namespace-scoped resources.
                      type: object
                    velero:
                      description: Velero messages
                      items:
                        type: string
                      type: array
                  type: object
                type: object
              startTimestamp:
                format: date-time
                type: string
              steps:
                description: StepProgress records history of a group steps' execution
                properties:
                  errorStep:
                    description: StepInfo includes details of a step's execution
                    properties:
                      completionTimestamp:
                        format: date-time
                        type: string
                      errorCount:
                        additionalProperties:
                          type: integer
                        type: object
                      firstFailureTimeStamp:
                        format: date-time
                        type: string
                      name:
                        type: string
                      retryTimes:
                        type: integer
                      startTimestamp:
                        format: date-time
                        type: string
                    type: object
                  history:
                    items:
                      description: StepInfo includes details of a step's execution
                      properties:
                        completionTimestamp:
                          format: date-time
                          type: string
                        errorCount:
                          additionalProperties:
                            type: integer
                          type: object
                        firstFailureTimeStamp:
                          format: date-time
                          type: string
                        name:
                          type: string
                        retryTimes:
                          type: integer
                        startTimestamp:
                          format: date-time
                          type: string
                      type: object
                    type: array
                  maxRetryCount:
                    type: integer
                  stepFailureTimeoutSeconds:
                    type: integer
                  totalRetryCount:
                    type: integer
                type: object
              totalItems:
                type: integer
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: restorejobs.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: RestoreJob
    listKind: RestoreJobList
    plural: restorejobs
    singular: restorejob
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RestoreJob is the Schema for the restorejobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RestoreJobSpec defines the desired state of RestoreJob
            properties:
              action:
                description: Action of restore job, { start, cancel }
                type: string
              backupJobName:
                description: BackupJobName is Name of backupjob
                type: string
              backupJobRef:
                description: BackupJobRef is Backup Job reference
                properties:
                  action:
                    description: Action for this job, { start, cancel }
                    type: string
                  backupName:
                    description: BackupName is Backup plan name
                    type: string
                  backupPlanRef:
                    description: BackupPlanRef is Backup Plan spec pointer. Created
                      at plan creation, and readonly
                    properties:
                      clusterName:
                        description: Name of the cluster CR
                        type: string
                      copyMethod:
                        description: Copy method, in {"filesystem", "snapshot"}, default
                          is "filesystem"
                        type: string
                      desc:
                        description: Desc is description for a backup plan.
                        type: string
                      displayName:
                        description: DisplayName is human-readable name
                        type: string
                      excludePV:
                        description: Exclude PV as backup resource, default is false
                        type: boolean
                      filters:
                        properties:
                          excludeClusterResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          excludeResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          includeClusterResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          includeResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          selector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        type: object
                      namespaces:
                        items:
                          type: string
                        type: array
                      policy:
                        description: Policy of the backup plan. Default is on demand
                          backup, retention is default to 7 days
                        properties:
                          desc:
                            description: Desc provides detailed description
                            type: string
                          displayName:
                            description: DisplayName is human-readable name
                            type: string
                          exportData:
                            description: ExportData is true when you want to export
                              data of a backup, only work for CopyMethod=snapshot.
                            type: boolean
                          frequency:
                            description: Frequency of the backup, follow cron job
                              string format
                            type: string
                          name:
                            description: Name of the policy
                            type: string
                          pause:
                            description: Pause true means scheduled backup is paused
                            type: boolean
                          repeat:
                            description: Repeat true means scheduled backup, false
                              means on demand backup
                            type: boolean
                          retention:
                            description: Retention of the backup, unit is hour
                            type: integer
                          snapshotLimit:
                            description: SnapshotLimit is the maximum number of snapshots
                              that will be retained.
                            type: integer
                        type: object
                      storageName:
                        description: Name of the storage CR
                        type: string
                      storageRef:
                        description: Storage spec structure is embeded as a pointer
                          here. Created at plan creation, and only changed when StorageName
                          is changed.
                        properties:
                          desc:
                            description: Desc provides detailed description
                            type: string
                          displayName:
                            description: DisplayName is human-readable name
                            type: string
                          isDefaultStorage:
                            description: IsDefaultStorage indicates it is default
                              storage for use
                            type: boolean
                          s3Config:
                            description: S3Config includes S3 access configuration
                            properties:
                              accessKeyId:
                                description: AccessKeyId is S3 aws-access-key-id
                                type: string
                              bucket:
                                description: Bucket is S3 bucket name
                                type: string
                              credsSecretName:
                                description: CredsSecretName links to a secret to
                                  access S3 object
                                type: string
                              insecure:
                                description: Insecure indicates not to verify https
                                  of s3url
                                type: boolean
                              region:
                                description: Region is S3 region
                                type: string
                              s3url:
                                description: S3URL is s3 URL
                                type: string
                              secretAccessKey:
                                description: SecretAccessKey is S3 aws-secret-access-key
                                type: string
                            required:
                            - accessKeyId
                            - bucket
                            - s3url
                            - secretAccessKey
                            type: object
                          s3Provider:
                            description: S3Provider is cloud provider for S3 service
                            type: string
                          tenant:
                            description: Tenant is global unique tenant id of a user
                            type: string
                          volumeSnapshotConfig:
                            description: VolumeSnapshotConfig includes configuration
                              for volume snapshot
                            properties:
                              credsSecretName:
                                description: CredsSecretName links to a secret which
                                  includes EBS volume snapshot credential
                                type: string
                              region:
                                description: Region is region of EBS volume in public
                                  cloud environment
                                type: string
                            type: object
                          volumeSnapshotProvider:
                            description: VolumeSnapshotProvider is cloud provider
                              for volume snapshot service
                            type: string
                        required:
                        - tenant
                        type: object
                      templates:
                        items:
                          items:
                            type: string
                          type: array
                        type: array
                      tenant:
                        description: Tenant is global unique tenant id of a user
                        type: string
                    required:
                    - clusterName
                    - storageName
                    - tenant
                    type: object
                  desc:
                    description: Desc provides detailed description
                    type: string
                  displayName:
                    description: DisplayName is human-readable name
                    type: string
                  exportData:
                    type: boolean
                  tenant:
                    description: Tenant is Unique name of tenant
                    type: string
                required:
                - backupName
                - tenant
                type: object
              desc:
                description: Desc provides detailed description
                type: string
              displayName:
                description: DisplayName is human-readable name
                type: string
              restoreName:
                description: RestoreName is RestorePlan Name
                type: string
              restorePlanRef:
                description: RestorePlanRef is Restore Plan reference
                properties:
                  actions:
                    description: Actions is for ys plugin of velero
                    properties:
                      storageClassMappings:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  backupName:
                    description: BackupName is Backup Plan Name
                    type: string
                  backupPlanRef:
                    description: BackupPlanRef is Backup plan reference
                    properties:
                      clusterName:
                        description: Name of the cluster CR
                        type: string
                      copyMethod:
                        description: Copy method, in {"filesystem", "snapshot"}, default
                          is "filesystem"
                        type: string
                      desc:
                        description: Desc is description for a backup plan.
                        type: string
                      displayName:
                        description: DisplayName is human-readable name
                        type: string
                      excludePV:
                        description: Exclude PV as backup resource, default is false
                        type: boolean
                      filters:
                        properties:
                          excludeClusterResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          excludeResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          includeClusterResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          includeResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          selector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                        type: object
                      namespaces:
                        items:
                          type: string
                        type: array
                      policy:
                        description: Policy of the backup plan. Default is on demand
                          backup, retention is default to 7 days
                        properties:
                          desc:
                            description: Desc provides detailed description
                            type: string
                          displayName:
                            description: DisplayName is human-readable name
                            type: string
                          exportData:
                            description: ExportData is true when you want to export
                              data of a backup, only work for CopyMethod=snapshot.
                            type: boolean
                          frequency:
                            description: Frequency of the backup, follow cron job
                              string format
                            type: string
                          name:
                            description: Name of the policy
                            type: string
                          pause:
                            description: Pause true means scheduled backup is paused
                            type: boolean
                          repeat:
                            description: Repeat true means scheduled backup, false
                              means on demand backup
                            type: boolean
                          retention:
                            description: Retention of the backup, unit is hour
                            type: integer
                          snapshotLimit:
                            description: SnapshotLimit is the maximum number of snapshots
                              that will be retained.
                            type: integer
                        type: object
                      storageName:
                        description: Name of the storage CR
                        type: string
                      storageRef:
                        description: Storage spec structure is embeded as a pointer
                          here. Created at plan creation, and only changed when StorageName
                          is changed.
                        properties:
                          desc:
                            description: Desc provides detailed description
                            type: string
                          displayName:
                            description: DisplayName is human-readable name
                            type: string
                          isDefaultStorage:
                            description: IsDefaultStorage indicates it is default
                              storage for use
                            type: boolean
                          s3Config:
                            description: S3Config includes S3 access configuration
                            properties:
                              accessKeyId:
                                description: AccessKeyId is S3 aws-access-key-id
                                type: string
                              bucket:
                                description: Bucket is S3 bucket name
                                type: string
                              credsSecretName:
                                description: CredsSecretName links to a secret to
                                  access S3 object
                                type: string
                              insecure:
                                description: Insecure indicates not to verify https
                                  of s3url
                                type: boolean
                              region:
                                description: Region is S3 region
                                type: string
                              s3url:
                                description: S3URL is s3 URL
                                type: string
                              secretAccessKey:
                                description: SecretAccessKey is S3 aws-secret-access-key
                                type: string
                            required:
                            - accessKeyId
                            - bucket
                            - s3url
                            - secretAccessKey
                            type: object
                          s3Provider:
                            description: S3Provider is cloud provider for S3 service
                            type: string
                          tenant:
                            description: Tenant is global unique tenant id of a user
                            type: string
                          volumeSnapshotConfig:
                            description: VolumeSnapshotConfig includes configuration
                              for volume snapshot
                            properties:
                              credsSecretName:
                                description: CredsSecretName links to a secret which
                                  includes EBS volume snapshot credential
                                type: string
                              region:
                                description: Region is region of EBS volume in public
                                  cloud environment
                                type: string
                            type: object
                          volumeSnapshotProvider:
                            description: VolumeSnapshotProvider is cloud provider
                              for volume snapshot service
                            type: string
                        required:
                        - tenant
                        type: object
                      templates:
                        items:
                          items:
                            type: string
                          type: array
                        type: array
                      tenant:
                        description: Tenant is global unique tenant id of a user
                        type: string
                    required:
                    - clusterName
                    - storageName
                    - tenant
                    type: object
                  dataOnly:
                    description: DataOnly does only PVC data restore from snapshot
                      or exported backupjob
                    type: boolean
                  desc:
                    description: Desc provides detailed description
                    type: string
                  destClusterName:
                    description: DestClusterName is Destination cluster name
                    type: string
                  displayName:
                    description: DisplayName is human-readable name
                    type: string
                  filters:
                    properties:
                      excludeClusterResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      excludeResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      includeClusterResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      includeResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      selector:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                    type: object
                  namespaceMapping:
                    additionalProperties:
                      type: string
                    type: object
                  namespaceMappings:
                    description: 'NamespaceMappings is namespace mappings, in k:v
                      pairs, e.g., "A: B" means original backup namepsace is A, restore
                      to namespace B'
                    items:
                      type: string
                    type: array
                  namespaces:
                    items:
                      type: string
                    type: array
                  resourceSelector:
                    description: ResourceSelector is for partial resource selection
                    properties:
                      excludedNamespaces:
                        description: ExcludedNamespaces is a slice of namespace names
                          to exclude. All namespaces in IncludedNamespaces, *except*
                          those in this slice, will be matched.
                        items:
                          type: string
                        type: array
                      excludedResources:
                        description: ExcludedResources is a slice of resources to
                          exclude. Resources may be specified as full names (e.g.
                          "services"), abbreviations (e.g. "svc"), or with the groups
                          they are in (e.g. "ingresses.extensions"). All resources
                          in IncludedResources, *except* those in this slice, will
                          be matched.
                        items:
                          type: string
                        type: array
                      includedNamespaces:
                        description: IncludedNamespaces is a slice of namespace names
                          to match. All namespaces in this slice, except those in
                          ExcludedNamespaces, will be matched. A nil/empty slice matches
                          all namespaces.
                        items:
                          type: string
                        type: array
                      includedResources:
                        description: IncludedResources is a slice of resources to
                          match. Resources may be specified as full names (e.g. "services"),
                          abbreviations (e.g. "svc"), or with the groups they are
                          in (e.g. "ingresses.extensions"). All resources in this
                          slice, except those in ExcludedResources, will be matched.
                          A nil/empty slice matches all resources.
                        items:
                          type: string
                        type: array
                      labelSelector:
                        description: LabelSelector is a string representation of a
                          selector to apply when matching resources. See "k8s.io/apimachinery/pkg/labels".Parse()
                          for details on syntax.
                        type: string
                    type: object
                  templates:
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  tenant:
                    description: Tenant is unique name of tenant
                    type: string
                required:
                - backupName
                - destClusterName
                - tenant
                type: object
              tenant:
                description: Tenant is unique name of tenant
                type: string
            required:
            - backupJobName
            - restoreName
            - tenant
            type: object
          status:
            description: RestoreJobStatus defines the observed state of RestoreJob
            properties:
              conditions:
                description: Conditions describes the detailed state of RestoreJob
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              errors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      items:
                        type: string
                      type: array
                    severity:
                      type: string
                  type: object
                type: array
              importResult:
                properties:
                  dataImportRef:
                    description: 'ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID
                      not honored" or "name must be restricted". Those cannot be well
                      described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.  Kind
                      is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don''t make new
                      APIs embed an underspecified API type they do not control. Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      .'
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  importStatus:
                    type: string
                type: object
              phase:
                description: Phase describes the overall status of RestoreJob
                type: string
              progress:
                description: Progress describes the overall progress of RestoreJob
                properties:
                  stepsCompleted:
                    type: integer
                  totalSteps:
                    type: integer
                type: object
              report:
                description: Report provides a summary status of restore job execution
                properties:
                  backedUpItems:
                    description: Backedup items
                    type: integer
                  details:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Resource details
                    type: object
                  endTime:
                    description: EndTime is the time restore job is completed
                    format: date-time
                    type: string
                  restoredItems:
                    description: Restored items
                    type: integer
                  results:
                    additionalProperties:
                      description: Velero result
                      properties:
                        cluster:
                          description: Cluster is a slice of messages related to restoring
                            cluster- scoped resources.
                          items:
                            type: string
                          type: array
                        namespaces:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Namespaces is a map of namespace name to slice
                            of messages related to restoring namespace-scoped resources.
                          type: object
                        velero:
                          description: Velero messages
                          items:
                            type: string
                          type: array
                      type: object
                    description: Results
                    type: object
                  startTime:
                    description: StartTime is the time restore job is executed
                    format: date-time
                    type: string
                  totalItems:
                    description: Total items for restore
                    type: integer
                  totalPVC:
                    description: TotalPVC is number of PVC restored in the restore
                      job
                    type: integer
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: restoreplans.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: RestorePlan
    listKind: RestorePlanList
    plural: restoreplans
    singular: restoreplan
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RestorePlan is the Schema for the restoreplans API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RestorePlanSpec defines the desired state of RestorePlan
            properties:
              actions:
                description: Actions is for ys plugin of velero
                properties:
                  storageClassMappings:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              backupName:
                description: BackupName is Backup Plan Name
                type: string
              backupPlanRef:
                description: BackupPlanRef is Backup plan reference
                properties:
                  clusterName:
                    description: Name of the cluster CR
                    type: string
                  copyMethod:
                    description: Copy method, in {"filesystem", "snapshot"}, default
                      is "filesystem"
                    type: string
                  desc:
                    description: Desc is description for a backup plan.
                    type: string
                  displayName:
                    description: DisplayName is human-readable name
                    type: string
                  excludePV:
                    description: Exclude PV as backup resource, default is false
                    type: boolean
                  filters:
                    properties:
                      excludeClusterResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      excludeResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      includeClusterResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      includeResources:
                        items:
                          properties:
                            group:
                              type: string
                            names:
                              items:
                                type: string
                              type: array
                            resource:
                              type: string
                            version:
                              type: string
                          type: object
                        type: array
                      selector:
                        description: A label selector is a label query over a set
                          of resources. The result of matchLabels and matchExpressions
                          are ANDed. An empty label selector matches all objects.
                          A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                    type: object
                  namespaces:
                    items:
                      type: string
                    type: array
                  policy:
                    description: Policy of the backup plan. Default is on demand backup,
                      retention is default to 7 days
                    properties:
                      desc:
                        description: Desc provides detailed description
                        type: string
                      displayName:
                        description: DisplayName is human-readable name
                        type: string
                      exportData:
                        description: ExportData is true when you want to export data
                          of a backup, only work for CopyMethod=snapshot.
                        type: boolean
                      frequency:
                        description: Frequency of the backup, follow cron job string
                          format
                        type: string
                      name:
                        description: Name of the policy
                        type: string
                      pause:
                        description: Pause true means scheduled backup is paused
                        type: boolean
                      repeat:
                        description: Repeat true means scheduled backup, false means
                          on demand backup
                        type: boolean
                      retention:
                        description: Retention of the backup, unit is hour
                        type: integer
                      snapshotLimit:
                        description: SnapshotLimit is the maximum number of snapshots
                          that will be retained.
                        type: integer
                    type: object
                  storageName:
                    description: Name of the storage CR
                    type: string
                  storageRef:
                    description: Storage spec structure is embeded as a pointer here.
                      Created at plan creation, and only changed when StorageName
                      is changed.
                    properties:
                      desc:
                        description: Desc provides detailed description
                        type: string
                      displayName:
                        description: DisplayName is human-readable name
                        type: string
                      isDefaultStorage:
                        description: IsDefaultStorage indicates it is default storage
                          for use
                        type: boolean
                      s3Config:
                        description: S3Config includes S3 access configuration
                        properties:
                          accessKeyId:
                            description: AccessKeyId is S3 aws-access-key-id
                            type: string
                          bucket:
                            description: Bucket is S3 bucket name
                            type: string
                          credsSecretName:
                            description: CredsSecretName links to a secret to access
                              S3 object
                            type: string
                          insecure:
                            description: Insecure indicates not to verify https of
                              s3url
                            type: boolean
                          region:
                            description: Region is S3 region
                            type: string
                          s3url:
                            description: S3URL is s3 URL
                            type: string
                          secretAccessKey:
                            description: SecretAccessKey is S3 aws-secret-access-key
                            type: string
                        required:
                        - accessKeyId
                        - bucket
                        - s3url
                        - secretAccessKey
                        type: object
                      s3Provider:
                        description: S3Provider is cloud provider for S3 service
                        type: string
                      tenant:
                        description: Tenant is global unique tenant id of a user
                        type: string
                      volumeSnapshotConfig:
                        description: VolumeSnapshotConfig includes configuration for
                          volume snapshot
                        properties:
                          credsSecretName:
                            description: CredsSecretName links to a secret which includes
                              EBS volume snapshot credential
                            type: string
                          region:
                            description: Region is region of EBS volume in public
                              cloud environment
                            type: string
                        type: object
                      volumeSnapshotProvider:
                        description: VolumeSnapshotProvider is cloud provider for
                          volume snapshot service
                        type: string
                    required:
                    - tenant
                    type: object
                  templates:
                    items:
                      items:
                        type: string
                      type: array
                    type: array
                  tenant:
                    description: Tenant is global unique tenant id of a user
                    type: string
                required:
                - clusterName
                - storageName
                - tenant
                type: object
              dataOnly:
                description: DataOnly does only PVC data restore from snapshot or
                  exported backupjob
                type: boolean
              desc:
                description: Desc provides detailed description
                type: string
              destClusterName:
                description: DestClusterName is Destination cluster name
                type: string
              displayName:
                description: DisplayName is human-readable name
                type: string
              filters:
                properties:
                  excludeClusterResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  excludeResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  includeClusterResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  includeResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  selector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
              namespaceMapping:
                additionalProperties:
                  type: string
                type: object
              namespaceMappings:
                description: 'NamespaceMappings is namespace mappings, in k:v pairs,
                  e.g., "A: B" means original backup namepsace is A, restore to namespace
                  B'
                items:
                  type: string
                type: array
              namespaces:
                items:
                  type: string
                type: array
              resourceSelector:
                description: ResourceSelector is for partial resource selection
                properties:
                  excludedNamespaces:
                    description: ExcludedNamespaces is a slice of namespace names
                      to exclude. All namespaces in IncludedNamespaces, *except* those
                      in this slice, will be matched.
                    items:
                      type: string
                    type: array
                  excludedResources:
                    description: ExcludedResources is a slice of resources to exclude.
                      Resources may be specified as full names (e.g. "services"),
                      abbreviations (e.g. "svc"), or with the groups they are in (e.g.
                      "ingresses.extensions"). All resources in IncludedResources,
                      *except* those in this slice, will be matched.
                    items:
                      type: string
                    type: array
                  includedNamespaces:
                    description: IncludedNamespaces is a slice of namespace names
                      to match. All namespaces in this slice, except those in ExcludedNamespaces,
                      will be matched. A nil/empty slice matches all namespaces.
                    items:
                      type: string
                    type: array
                  includedResources:
                    description: IncludedResources is a slice of resources to match.
                      Resources may be specified as full names (e.g. "services"),
                      abbreviations (e.g. "svc"), or with the groups they are in (e.g.
                      "ingresses.extensions"). All resources in this slice, except
                      those in ExcludedResources, will be matched. A nil/empty slice
                      matches all resources.
                    items:
                      type: string
                    type: array
                  labelSelector:
                    description: LabelSelector is a string representation of a selector
                      to apply when matching resources. See "k8s.io/apimachinery/pkg/labels".Parse()
                      for details on syntax.
                    type: string
                type: object
              templates:
                items:
                  items:
                    type: string
                  type: array
                type: array
              tenant:
                description: Tenant is unique name of tenant
                type: string
            required:
            - backupName
            - destClusterName
            - tenant
            type: object
          status:
            description: RestorePlanStatus defines the observed state of RestorePlan
            properties:
              conditions:
                description: Conditions describes the detailed state of restore plan
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              currentJobName:
                description: CurrentJobName is the restore job is latest restore job
                type: string
              currentJobPhase:
                description: CurrentJobPhase is the phase of latest restore job
                type: string
              errors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      items:
                        type: string
                      type: array
                    severity:
                      type: string
                  type: object
                type: array
              jobDetail:
                additionalProperties:
                  type: string
                description: JobDetail is some detail info of jobs that referring
                  this plan
                type: object
              phase:
                description: Phase describes the overall status of restore plan
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: restores.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: Restore
    listKind: RestoreList
    plural: restores
    singular: restore
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Restore is the Schema for the restores API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RestoreSpec defines the desired state of Restore
            properties:
              actions:
                description: RestoreActions defines the action for a restore
                properties:
                  podNodeSelections:
                    properties:
                      newNodeAffinity:
                        description: Node affinity is a group of node affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                        type: object
                      newNodeName:
                        type: string
                      newNodeSelector:
                        additionalProperties:
                          type: string
                        type: object
                      nodeAffinityPluginAction:
                        type: string
                      nodeNamePluginAction:
                        type: string
                      nodeSelectorPluginAction:
                        type: string
                    type: object
                  storageClassMappings:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              backupRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              closed:
                type: boolean
              dataOnly:
                description: DataOnly does only PVC data restore from snapshot or
                  exported backupjob
                type: boolean
              destClusterRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs. 1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage. 2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular restrictions like, "must refer
                  only to types A and B" or "UID not honored" or "name must be restricted".
                  Those cannot be well described when embedded. 3. Inconsistent validation.  Because
                  the usages are different, the validation rules are different by
                  usage, which makes it hard for users to predict what will happen.
                  4. The fields are both imprecise and overly precise.  Kind is not
                  a precise mapping to a URL. This can produce ambiguity during interpretation
                  and require a REST mapping.  In most cases, the dependency is on
                  the group,resource tuple and the version of the actual struct is
                  irrelevant. 5. We cannot easily change it.  Because this type is
                  embedded in many locations, updates to this type will affect numerous
                  schemas.  Don''t make new APIs embed an underspecified API type
                  they do not control. Instead of using this type, create a locally
                  provided and used type that is well-focused on your reference. For
                  example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              filters:
                properties:
                  excludeClusterResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  excludeResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  includeClusterResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  includeResources:
                    items:
                      properties:
                        group:
                          type: string
                        names:
                          items:
                            type: string
                          type: array
                        resource:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  selector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                type: object
              hooks:
                items:
                  description: MigPlanHook hold a referene to a MigHook along with
                    the desired phase to run it in
                  properties:
                    executionNamespace:
                      type: string
                    phase:
                      type: string
                    reference:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs. 1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage. 2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular restrictions like, "must refer
                        only to types A and B" or "UID not honored" or "name must
                        be restricted". Those cannot be well described when embedded.
                        3. Inconsistent validation.  Because the usages are different,
                        the validation rules are different by usage, which makes it
                        hard for users to predict what will happen. 4. The fields
                        are both imprecise and overly precise.  Kind is not a precise
                        mapping to a URL. This can produce ambiguity during interpretation
                        and require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple and the version of the actual
                        struct is irrelevant. 5. We cannot easily change it.  Because
                        this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don''t make new APIs embed
                        an underspecified API type they do not control. Instead of
                        using this type, create a locally provided and used type that
                        is well-focused on your reference. For example, ServiceReferences
                        for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    serviceAccount:
                      type: string
                    type:
                      type: string
                  required:
                  - phase
                  - reference
                  - type
                  type: object
                type: array
              namespaceMapping:
                additionalProperties:
                  type: string
                type: object
              namespaces:
                items:
                  type: string
                type: array
              policy:
                description: RestorePolicy defines the policy for a restore
                properties:
                  name:
                    type: string
                type: object
              resourceSelector:
                description: ResourceSelector is for partial resource selection
                properties:
                  excludedNamespaces:
                    description: ExcludedNamespaces is a slice of namespace names
                      to exclude. All namespaces in IncludedNamespaces, *except* those
                      in this slice, will be matched.
                    items:
                      type: string
                    type: array
                  excludedResources:
                    description: ExcludedResources is a slice of resources to exclude.
                      Resources may be specified as full names (e.g. "services"),
                      abbreviations (e.g. "svc"), or with the groups they are in (e.g.
                      "ingresses.extensions"). All resources in IncludedResources,
                      *except* those in this slice, will be matched.
                    items:
                      type: string
                    type: array
                  includedNamespaces:
                    description: IncludedNamespaces is a slice of namespace names
                      to match. All namespaces in this slice, except those in ExcludedNamespaces,
                      will be matched. A nil/empty slice matches all namespaces.
                    items:
                      type: string
                    type: array
                  includedResources:
                    description: IncludedResources is a slice of resources to match.
                      Resources may be specified as full names (e.g. "services"),
                      abbreviations (e.g. "svc"), or with the groups they are in (e.g.
                      "ingresses.extensions"). All resources in this slice, except
                      those in ExcludedResources, will be matched. A nil/empty slice
                      matches all resources.
                    items:
                      type: string
                    type: array
                  labelSelector:
                    description: LabelSelector is a string representation of a selector
                      to apply when matching resources. See "k8s.io/apimachinery/pkg/labels".Parse()
                      for details on syntax.
                    type: string
                type: object
              templates:
                items:
                  items:
                    type: string
                  type: array
                type: array
            type: object
          status:
            description: RestoreStatus defines the observed state of Restore
            properties:
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              incompatibleNamespaces:
                items:
                  description: IncompatibleNamespace - namespace, which is noticed
                    to contain resources incompatible by the migration
                  properties:
                    gvks:
                      items:
                        description: IncompatibleGVK - custom structure for printing
                          GVKs lowercase
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          version:
                            type: string
                        required:
                        - group
                        - kind
                        - version
                        type: object
                      type: array
                    name:
                      type: string
                  required:
                  - gvks
                  - name
                  type: object
                type: array
              namespaces:
                items:
                  description: UnhealthyNamespace is a store for unhealthy resources
                    in a namespace
                  properties:
                    name:
                      type: string
                    workloads:
                      items:
                        description: Workload is a store for unhealthy resource and
                          it's dependents
                        properties:
                          name:
                            type: string
                          resources:
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - name
                  - workloads
                  type: object
                type: array
              resourceFilterRules:
                properties:
                  dataOnly:
                    type: boolean
                  namespaceMapping:
                    additionalProperties:
                      type: string
                    type: object
                  namespaces:
                    items:
                      type: string
                    type: array
                  templates:
                    items:
                      items:
                        properties:
                          excludeClusterResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          excludeResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          includeClusterResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          includeResources:
                            items:
                              properties:
                                group:
                                  type: string
                                names:
                                  items:
                                    type: string
                                  type: array
                                resource:
                                  type: string
                                version:
                                  type: string
                              type: object
                            type: array
                          namespaces:
                            items:
                              type: string
                            type: array
                          selector:
                            description: A label selector is a label query over a
                              set of resources. The result of matchLabels and matchExpressions
                              are ANDed. An empty label selector matches all objects.
                              A null label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          templateName:
                            type: string
                        type: object
                      type: array
                    type: array
                type: object
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: storages.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: Storage
    listKind: StorageList
    plural: storages
    singular: storage
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Storage is the Schema for the storages API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StorageSpec defines the desired state of Storage
            properties:
              desc:
                description: Desc provides detailed description
                type: string
              displayName:
                description: DisplayName is human-readable name
                type: string
              isDefaultStorage:
                description: IsDefaultStorage indicates it is default storage for
                  use
                type: boolean
              s3Config:
                description: S3Config includes S3 access configuration
                properties:
                  accessKeyId:
                    description: AccessKeyId is S3 aws-access-key-id
                    type: string
                  bucket:
                    description: Bucket is S3 bucket name
                    type: string
                  credsSecretName:
                    description: CredsSecretName links to a secret to access S3 object
                    type: string
                  insecure:
                    description: Insecure indicates not to verify https of s3url
                    type: boolean
                  region:
                    description: Region is S3 region
                    type: string
                  s3url:
                    description: S3URL is s3 URL
                    type: string
                  secretAccessKey:
                    description: SecretAccessKey is S3 aws-secret-access-key
                    type: string
                required:
                - accessKeyId
                - bucket
                - s3url
                - secretAccessKey
                type: object
              s3Provider:
                description: S3Provider is cloud provider for S3 service
                type: string
              tenant:
                description: Tenant is global unique tenant id of a user
                type: string
              volumeSnapshotConfig:
                description: VolumeSnapshotConfig includes configuration for volume
                  snapshot
                properties:
                  credsSecretName:
                    description: CredsSecretName links to a secret which includes
                      EBS volume snapshot credential
                    type: string
                  region:
                    description: Region is region of EBS volume in public cloud environment
                    type: string
                type: object
              volumeSnapshotProvider:
                description: VolumeSnapshotProvider is cloud provider for volume snapshot
                  service
                type: string
            required:
            - tenant
            type: object
          status:
            description: StorageStatus defines the observed state of Storage
            properties:
              conditions:
                description: Conditions describes the detailed state of Tenant
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              errors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      items:
                        type: string
                      type: array
                    severity:
                      type: string
                  type: object
                type: array
              phase:
                description: Phase describes the overall status of Tenant
                type: string
              testResults:
                additionalProperties:
                  description: TestResult defines test result in a managed cluster
                  properties:
                    reason:
                      type: string
                    result:
                      type: string
                  type: object
                description: TestResults describe the test result in each cluster
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: systemreports.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: SystemReport
    listKind: SystemReportList
    plural: systemreports
    shortNames:
    - sr
    singular: systemreport
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: SystemReport is the Schema for the systemreport API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SystemSettingSpec defines the desired state of SystemSetting
            properties:
              reportTimestamp:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                format: date-time
                type: string
              statsIntervalEndTimestamp:
                format: date-time
                type: string
              statsIntervalStartTimestamp:
                format: date-time
                type: string
            type: object
          status:
            properties:
              applications:
                properties:
                  managed:
                    items:
                      type: string
                    type: array
                  unmanaged:
                    items:
                      type: string
                    type: array
                type: object
              backupPolicy:
                properties:
                  total:
                    items:
                      type: string
                    type: array
                  used:
                    items:
                      type: string
                    type: array
                type: object
              clusters:
                properties:
                  managedClusters:
                    items:
                      type: string
                    type: array
                  unmanagedClusters:
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              errorMessage:
                type: string
              jobs:
                properties:
                  backups:
                    properties:
                      completedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      failedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      jobsInProgress:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      longRuns:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      queued:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                    type: object
                  exports:
                    properties:
                      completedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      failedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      jobsInProgress:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      longRuns:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      queued:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                    type: object
                  imports:
                    properties:
                      completedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      failedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      jobsInProgress:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      longRuns:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      queued:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                    type: object
                  migrations:
                    properties:
                      completedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      failedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      jobsInProgress:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      longRuns:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      queued:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                    type: object
                  restores:
                    properties:
                      completedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      failedJobs:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      jobsInProgress:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      longRuns:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      queued:
                        items:
                          properties:
                            cluster:
                              properties:
                                source:
                                  type: string
                                target:
                                  type: string
                              type: object
                            endTime:
                              format: date-time
                              type: string
                            name:
                              type: string
                            namespaces:
                              items:
                                type: string
                              type: array
                            startTime:
                              format: date-time
                              type: string
                            systemReferenceCode:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              notifications:
                properties:
                  mailResult:
                    type: string
                  weChatResult:
                    type: string
                type: object
              phase:
                type: string
              selfBackupStatus:
                properties:
                  selfBackupEnabled:
                    type: boolean
                  selfBackupErrorMsg:
                    type: string
                  selfBackupState:
                    type: string
                  selfBackupTime:
                    format: date-time
                    type: string
                type: object
              storages:
                properties:
                  StorageUsage:
                    additionalProperties:
                      properties:
                        total:
                          format: int64
                          type: integer
                        used:
                          format: int64
                          type: integer
                        usedPerCluster:
                          additionalProperties:
                            format: int64
                            type: integer
                          type: object
                      type: object
                    type: object
                  connected:
                    items:
                      type: string
                    type: array
                  count:
                    type: integer
                  snapshot:
                    items:
                      properties:
                        cluster:
                          type: string
                        namespace:
                          type: string
                        planNames:
                          additionalProperties:
                            properties:
                              snapshotCount:
                                type: integer
                              snapshotLimit:
                                type: integer
                            type: object
                          type: object
                        pvcName:
                          type: string
                        snapshotLimit:
                          type: integer
                        totalSnapshots:
                          type: integer
                      type: object
                    type: array
                  unconnected:
                    items:
                      type: string
                    type: array
                type: object
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: systemsettings.migration.yinhestor.com
spec:
  group: migration.yinhestor.com
  names:
    kind: SystemSetting
    listKind: SystemSettingList
    plural: systemsettings
    singular: systemsetting
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SystemSetting is the Schema for the systemsettings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SystemSettingSpec defines the desired state of SystemSetting
            properties:
              report:
                description: Sends report to specified addresses including backupjobs,
                  migrations, restorejobs status every day at notifyTime
                properties:
                  notifyTime:
                    type: string
                  toMailAddress:
                    items:
                      type: string
                    type: array
                  weChatReport:
                    type: boolean
                type: object
              smtpSetting:
                properties:
                  senderMailAddress:
                    type: string
                  smtpHost:
                    type: string
                  smtpPort:
                    type: string
                type: object
              systemReportEnabled:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                  Reports includes backupjobs, migrations, restorejobs status'
                type: boolean
              systemReportSecret:
                type: string
            type: object
          status:
            description: SystemSettingStatus defines the observed state of SystemSetting
            properties:
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-Staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              criticalErrors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
              warnings:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      additionalProperties:
                        type: string
                      type: object
                    reason:
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: tenantmanagers.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: TenantManager
    listKind: TenantManagerList
    plural: tenantmanagers
    singular: tenantmanager
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TenantManager is the Schema for the tenantmanagers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TenantManagerSpec defines the desired state of TenantManager
            properties:
              expandThreshold:
                type: integer
              maxTenantWorker:
                type: integer
              minTenantWorker:
                type: integer
              shrinkThreshold:
                type: integer
              syncIntervalSeconds:
                type: integer
              tenantLimit:
                type: integer
            type: object
          status:
            description: TenantManagerStatus defines the observed state of TenantManager
            properties:
              addingTenantList:
                description: AddingList includes tenants which are under allocation
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted". Those cannot be well described when
                    embedded. 3. Inconsistent validation.  Because the usages are
                    different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              availableTenantWorkers:
                type: integer
              conditions:
                description: Conditions describes the detailed state of tenant manager
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              expectedTenantWorkers:
                type: integer
              inServiceTenantWorkers:
                items:
                  type: string
                type: array
              occupiedTenantWorkers:
                items:
                  type: string
                type: array
              phase:
                type: string
              reSyncTenantWorkerImage:
                description: Resync all images' version for upgrade/downgrade
                items:
                  type: string
                type: array
              releasedTenantWorkers:
                items:
                  type: string
                type: array
              removingTenantList:
                description: RemovingList includes tenants which are under release
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted". Those cannot be well described when
                    embedded. 3. Inconsistent validation.  Because the usages are
                    different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              state:
                type: string
              tenantLocations:
                additionalProperties:
                  type: string
                type: object
              totalTenants:
                type: integer
              unHealthyTenantWorkers:
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: tenants.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: Tenant
    listKind: TenantList
    plural: tenants
    singular: tenant
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Tenant is the Schema for the tenants API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TenantSpec defines the desired state of Tenant
            properties:
              contact:
                description: Contact provides ways to connect users of tenant, such
                  as email or telphone
                type: string
              defaultBackupStorage:
                description: DefaultBackupStorage provides default backup storages
                  of a tenant for backup/restore
                type: string
              desc:
                description: Desc provides detailed description
                type: string
              displayName:
                description: DisplayName is human-readable name
                type: string
              isExpired:
                description: IsExpired indicts if the resources from tenant can be
                  reclaimed
                type: boolean
              orgName:
                description: OrgName is organization name of a tenant
                type: string
            type: object
          status:
            description: TenantStatus defines the observed state of Tenant
            properties:
              conditions:
                description: Conditions describes the detailed state of Tenant
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              errors:
                items:
                  properties:
                    code:
                      type: string
                    message:
                      type: string
                    params:
                      items:
                        type: string
                      type: array
                    severity:
                      type: string
                  type: object
                type: array
              phase:
                description: Phase describes the overall status of Tenant
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: tenantworkers.ys.jibudata.com
spec:
  group: ys.jibudata.com
  names:
    kind: TenantWorker
    listKind: TenantWorkerList
    plural: tenantworkers
    singular: tenantworker
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TenantWorker is the Schema for the tenantworkers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TenantWorkerSpec defines the desired state of TenantWorker
            properties:
              backendControllerImage:
                type: string
              backendOperatorImage:
                type: string
              configs:
                additionalProperties:
                  type: string
                description: additional paramaters to configure the tenant worker,
                  such as tech preview functions.
                type: object
              cronImage:
                type: string
              dataMoverImage:
                type: string
              discoveryControllerImage:
                type: string
              imageRep:
                description: tenant worker configurations are independent for upgrade
                type: string
              isReClaimed:
                description: IsReClaimed indicts if resources of the tenant worker
                  needs to be reclaimed
                type: boolean
              reSyncImageVersion:
                description: ReSyncVersion indicts if image version resync should
                  be triggered
                type: boolean
              tenantLimit:
                description: TenantLimit caps the maximal tenant instances to be served
                type: integer
              tenantProcessorImage:
                type: string
              tenantRefs:
                description: TenantRefs includes current tenant instanaces for service
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted". Those cannot be well described when
                    embedded. 3. Inconsistent validation.  Because the usages are
                    different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              veleroHelperImage:
                type: string
              veleroImage:
                type: string
              veleroInstallerImage:
                type: string
              veleroPlugins:
                type: string
            required:
            - backendControllerImage
            - backendOperatorImage
            - discoveryControllerImage
            - imageRep
            - tenantLimit
            - tenantProcessorImage
            - veleroHelperImage
            - veleroImage
            - veleroInstallerImage
            - veleroPlugins
            type: object
          status:
            description: TenantWorkerStatus defines the observed state of TenantWorker
            properties:
              conditions:
                description: Conditions describes the detailed state of tenant worker
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              phase:
                description: Phase describes the overall status of tenant worker
                type: string
              state:
                description: State describes if the tenant worker can serve any tenant
                  instance
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
